jdk.Deoptimization {
  startTime = 17:41:13.905
  compileId = 1193
  compiler = "c2"
  method = java.util.ArrayList.grow(int)
  lineNumber = 233
  bci = 17
  instruction = "if_acmpeq"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  id = 1538
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1538
  name = "stackTrace"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1538
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1532
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1532
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 2
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 2
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 3
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 4
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 4
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 4
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 5
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 5
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 5
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 6
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 6
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 6
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 7
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 7
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 7
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 8
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 8
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 8
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 9
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 9
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 10
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 10
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 10
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 11
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 11
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 11
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 12
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 12
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 12
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 13
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 13
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 14
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 14
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 14
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 15
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 15
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 16
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 17
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 17
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 17
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 18
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 18
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 18
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 19
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 20
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 21
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 22
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 23
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 24
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 25
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 26
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 27
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 28
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 29
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 30
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 30
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 31
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 31
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 32
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 33
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 34
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 35
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 35
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 36
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 36
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 36
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 37
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 37
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 38
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 38
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 39
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 39
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 40
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 40
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 41
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 42
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 43
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 44
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 45
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 46
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 47
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 48
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 49
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 50
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 51
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 52
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 53
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 54
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 54
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 55
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 55
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 56
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 56
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 57
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 57
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 58
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 58
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 59
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 59
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 60
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 60
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 61
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 61
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 62
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 62
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 63
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 64
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 65
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 66
  name = "threshold"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 66
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 67
  name = "threshold"
  value = "60 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 67
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 68
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 69
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 70
  name = "threshold"
  value = "100 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 70
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 71
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 72
  name = "stackTrace"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 72
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 73
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 73
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 74
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 74
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 75
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 75
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 76
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 76
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 77
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 77
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 78
  name = "threshold"
  value = "10 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 78
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 79
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 79
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 80
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 80
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 81
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 81
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 82
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 82
  name = "throttle"
  value = "150/s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 82
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 83
  name = "stackTrace"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 83
  name = "cutoff"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 83
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 84
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 85
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 86
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 86
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 87
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 87
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 88
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 88
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 89
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 89
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 90
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 90
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 91
  name = "period"
  value = "endChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 91
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 92
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 92
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 93
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 93
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 94
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 94
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 95
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 95
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 96
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 96
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 97
  name = "period"
  value = "5 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 97
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 98
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 98
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 99
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 99
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 100
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 100
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 101
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 101
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 102
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 102
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 103
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 103
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 104
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 104
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 105
  name = "period"
  value = "10 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 105
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 106
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 106
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 107
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 107
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 108
  name = "period"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 108
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 109
  name = "period"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 109
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 110
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 110
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 111
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 111
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 112
  name = "period"
  value = "endChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 112
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 113
  name = "period"
  value = "endChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 113
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 114
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 114
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 115
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 115
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 116
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 116
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 117
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 117
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 118
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 118
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 119
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 119
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 120
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 120
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 121
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 121
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 122
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 122
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 123
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 123
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 124
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 124
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 125
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 125
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 126
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 126
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 127
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 127
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 128
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 128
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 129
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 129
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 130
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 130
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 131
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 131
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 132
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 132
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 133
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 133
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 134
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 134
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 135
  name = "threshold"
  value = "1 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 135
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 135
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 136
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 136
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 137
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 137
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 138
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 138
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 139
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 139
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 140
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 140
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 141
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 141
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 142
  name = "threshold"
  value = "0 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 142
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 143
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 144
  name = "period"
  value = "everyChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 144
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 145
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 145
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 146
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 146
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 146
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 147
  name = "threshold"
  value = "1 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 147
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 147
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1563
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1563
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1563
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1560
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1560
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1560
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1557
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1557
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1557
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1554
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1554
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1554
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1551
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1551
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1551
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1548
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1548
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1548
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1545
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1545
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1545
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1810
  name = "period"
  value = "30 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1810
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1807
  name = "period"
  value = "30 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1807
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1804
  name = "period"
  value = "30 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1804
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1801
  name = "period"
  value = "30 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1801
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1798
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1798
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1571
  name = "period"
  value = "beginChunk"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1571
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1567
  name = "period"
  value = "5 s"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1567
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1542
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1542
  name = "stackTrace"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1542
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1538
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1538
  name = "stackTrace"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1538
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1535
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1532
  name = "period"
  value = "1000 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1532
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "threshold"
  value = "0 ns"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1529
  name = "enabled"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1526
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1523
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1520
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1517
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "threshold"
  value = "20 ms"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "stackTrace"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveSetting {
  startTime = 17:41:13.906
  duration = 0.738 ms
  id = 1514
  name = "enabled"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ActiveRecording {
  startTime = 17:41:13.908
  id = 1
  name = "1"
  destination = "C:\Users\rujche\Work\git-workspace\main\samples\flight.jfr"
  maxAge = 106751991167 d 7 h
  flushInterval = 1.00 s
  maxSize = 0 bytes
  recordingStart = 17:41:13.892
  recordingDuration = 30.0 s
  eventThread = "main" (javaThreadId = 1)
}

jdk.JVMInformation {
  startTime = 17:41:13.914
  jvmName = "OpenJDK 64-Bit Server VM"
  jvmVersion = "OpenJDK 64-Bit Server VM (17.0.11+9-LTS) for windows-amd64 JRE (17.0.11+9-LTS), built on Apr  9 2024 22:05:54 by "MicrosoftCorporation" with MS VC++ 16.10 / 16.11 (VS2019)"
  jvmArguments = "-XX:StartFlightRecording=duration=30s,filename=flight.jfr -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\lib\idea_rt.jar=57753:C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin -Dfile.encoding=UTF-8"
  jvmFlags = N/A
  javaArguments = "rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample"
  jvmStartTime = 17:41:13.210
  pid = 18808
}

jdk.OSInformation {
  startTime = 17:41:13.915
  osVersion = "OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.3672)
OS uptime: 0 days 6:22 hours
Hyper-V role detected
"
}

jdk.VirtualizationInformation {
  startTime = 17:41:13.915
  name = "Hyper-V role"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.specification.name"
  value = "Java Virtual Machine Specification"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.version"
  value = "17.0.11+9-LTS"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.name"
  value = "OpenJDK 64-Bit Server VM"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "jdk.debug"
  value = "release"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "sun.boot.library.path"
  value = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.library.path"
  value = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Microsoft SDKs\Azure\CLI2\wbin;C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\rujche\Work\software\apache-maven-3.9.7-bin\apache-maven-3.9.7\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\rujche\AppData\Local\Programs\Python\Launcher\;C:\Users\rujche\AppData\Local\Microsoft\WindowsApps;C:\Users\rujche\AppData\Local\Programs\Azure Dev CLI\;."
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.home"
  value = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.class.path"
  value = "C:\Users\rujche\Work\git-workspace\main\samples\target\classes;C:\Users\rujche\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\rujche\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\rujche\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\rujche\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\rujche\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\rujche\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\rujche\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.info"
  value = "mixed mode, sharing"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.specification.vendor"
  value = "Oracle Corporation"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.specification.version"
  value = "17"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.vendor"
  value = "Microsoft"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "file.encoding"
  value = "UTF-8"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "sun.java.command"
  value = "rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "sun.java.launcher"
  value = "SUN_STANDARD"
}

jdk.InitialSystemProperty {
  startTime = 17:41:13.915
  key = "java.vm.compressedOopsMode"
  value = "Zero based"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ALLUSERSPROFILE"
  value = "C:\ProgramData"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "APPDATA"
  value = "C:\Users\rujche\AppData\Roaming"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "CommonProgramFiles"
  value = "C:\Program Files\Common Files"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "CommonProgramFiles(x86)"
  value = "C:\Program Files (x86)\Common Files"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "CommonProgramW6432"
  value = "C:\Program Files\Common Files"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "COMPUTERNAME"
  value = "RUJUNCHENWORKPC"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ComSpec"
  value = "C:\Windows\system32\cmd.exe"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "DriverData"
  value = "C:\Windows\System32\Drivers\DriverData"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "EFC_4116"
  value = "1"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "FPS_BROWSER_APP_PROFILE_STRING"
  value = "Internet Explorer"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "FPS_BROWSER_USER_PROFILE_STRING"
  value = "Default"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "HOMEDRIVE"
  value = "C:"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "HOMEPATH"
  value = "\Users\rujche"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "IDEA_INITIAL_DIRECTORY"
  value = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "JAVA_HOME"
  value = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "JAVA_HOME_11"
  value = "C:\Program Files\Microsoft\jdk-11.0.23.9-hotspot"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "JAVA_HOME_17"
  value = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "LOCALAPPDATA"
  value = "C:\Users\rujche\AppData\Local"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "LOGONSERVER"
  value = "\\RUJUNCHENWORKPC"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "NUMBER_OF_PROCESSORS"
  value = "8"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "OneDrive"
  value = "C:\Users\rujche\OneDrive - Microsoft"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "OneDriveCommercial"
  value = "C:\Users\rujche\OneDrive - Microsoft"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "OS"
  value = "Windows_NT"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "Path"
  value = "C:\Program Files\Microsoft SDKs\Azure\CLI2\wbin;C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\rujche\Work\software\apache-maven-3.9.7-bin\apache-maven-3.9.7\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\rujche\AppData\Local\Programs\Python\Launcher\;C:\Users\rujche\AppData\Local\Microsoft\WindowsApps;C:\Users\rujche\AppData\Local\Programs\Azure Dev CLI\"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PATHEXT"
  value = ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PROCESSOR_ARCHITECTURE"
  value = "AMD64"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PROCESSOR_IDENTIFIER"
  value = "Intel64 Family 6 Model 142 Stepping 10, GenuineIntel"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PROCESSOR_LEVEL"
  value = "6"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PROCESSOR_REVISION"
  value = "8e0a"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ProgramData"
  value = "C:\ProgramData"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ProgramFiles"
  value = "C:\Program Files"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ProgramFiles(x86)"
  value = "C:\Program Files (x86)"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "ProgramW6432"
  value = "C:\Program Files"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PSModulePath"
  value = "C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "PUBLIC"
  value = "C:\Users\Public"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "SESSIONNAME"
  value = "Console"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "SystemDrive"
  value = "C:"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "SystemRoot"
  value = "C:\Windows"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "TEMP"
  value = "C:\Users\rujche\AppData\Local\Temp"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "TMP"
  value = "C:\Users\rujche\AppData\Local\Temp"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "UATDATA"
  value = "C:\Windows\CCM\UATData\D9F8C395-CAB8-491d-B8AC-179A1FE1BE77"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "USERDNSDOMAIN"
  value = "fareast.corp.microsoft.com"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "USERDOMAIN"
  value = "FAREAST"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "USERDOMAIN_ROAMINGPROFILE"
  value = "FAREAST"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "USERNAME"
  value = "rujche"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "USERPROFILE"
  value = "C:\Users\rujche"
}

jdk.InitialEnvironmentVariable {
  startTime = 17:41:13.915
  key = "windir"
  value = "C:\Windows"
}

jdk.CPUInformation {
  startTime = 17:41:13.915
  cpu = "Intel (null) (HT) SSE SSE2 SSE3 SSSE3 SSE4.1 SSE4.2 Core Intel64"
  description = "Brand: Intel(R) Core(TM) i7-8650U CPU @ 1.90GHz, Vendor: GenuineIntel
Family: <unknown> (0x6), Model: <unknown> (0x8e), Stepping: 0xa
Ext. family: 0x0, Ext. model: 0x8, Type: 0x0, Signature: 0x000806ea
Features: ebx: 0x04100800, ecx: 0xfffaf38f, edx: 0xbfebfbff
Ext. features: eax: 0x00000000, ebx: 0x00000000, ecx: 0x00000121, edx: 0x2c100800
Supports: On-Chip FPU, Virtual Mode Extensions, Debugging Extensions, Page Size Extensions, Time Stamp Counter, Model Specific Registers, Physical Address Extension, Machine Check Exceptions, CMPXCHG8B Instruction, On-Chip APIC, Fast System Call, Memory Type Range Registers, Page Global Enable, Machine Check Architecture, Conditional Mov Instruction, Page Attribute Table, 36-bit Page Size Extension, CLFLUSH Instruction, Debug Trace Store feature, ACPI registers in MSR space, Intel Architecture MMX Technology, Fast Float Point Save and Restore, Streaming SIMD extensions, Streaming SIMD extensions 2, Self-Snoop, Hyper Threading, Thermal Monitor, Streaming SIMD Extensions 3, PCLMULQDQ, 64-bit DS Area, MONITOR/MWAIT instructions, Enhanced Intel SpeedStep technology, Thermal Monitor 2, Supplemental Streaming SIMD Extensions 3, Fused Multiply-Add, CMPXCHG16B, xTPR Update Control, Perfmon and Debug Capability, Process-context identifiers, Streaming SIMD extensions 4.1, Streaming SIMD extensions 4.2, x2APIC, MOVBE, Popcount instruction, TSC-Deadline, AESNI, XSAVE, OSXSAVE, AVX, F16C, LAHF/SAHF instruction support, Advanced Bit Manipulations: LZCNT, SYSCALL/SYSRET, Execute Disable Bit, RDTSCP, Intel 64 Architecture, Invariant TSC"
  sockets = 1
  cores = 4
  hwThreads = 8
}

jdk.CPUTimeStampCounter {
  startTime = 17:41:13.915
  fastTimeEnabled = true
  fastTimeAutoEnabled = true
  osFrequency = 10000000 Hz
  fastTimeFrequency = 1900000000 Hz
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 11)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140422D0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 6)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE0F10
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 18)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140425F0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 391 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 5)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE0E70
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 13)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14040ED0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 19)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041BF0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 434 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 21)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041010
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 14)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14040F70
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 9)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041DD0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 20)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041B50
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 8)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14042050
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 10)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041A10
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE1190
  classCount = 0
  chunkSize = 0 bytes
  blockSize = 0 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = N/A
  parentClassLoader = N/A
  classLoaderData = 0x1FCCD78BEF0
  classCount = 1783
  chunkSize = 568.0 kB
  blockSize = 556.6 kB
  hiddenClassCount = 11
  hiddenChunkSize = 4.1 kB
  hiddenBlockSize = 2.4 kB
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 4)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE19B0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 7)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041E70
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 15)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041790
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 16)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14042190
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 17)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041970
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 12)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140409D0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:13.915
  classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  parentClassLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  classLoaderData = 0x1FCCDBDFE30
  classCount = 3
  chunkSize = 2.3 kB
  blockSize = 2.0 kB
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 19.0 MB
  thread = "main" (javaThreadId = 1)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Reference Handler" (javaThreadId = 2)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 280 bytes
  thread = "Finalizer" (javaThreadId = 3)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Signal Dispatcher" (javaThreadId = 4)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 117.9 kB
  thread = "Attach Listener" (javaThreadId = 5)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Service Thread" (javaThreadId = 6)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Monitor Deflation Thread" (javaThreadId = 7)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "C2 CompilerThread0" (javaThreadId = 8)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 3.9 kB
  thread = "C1 CompilerThread0" (javaThreadId = 11)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Sweeper thread" (javaThreadId = 12)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "Common-Cleaner" (javaThreadId = 13)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 129.1 kB
  thread = "Monitor Ctrl-Break" (javaThreadId = 14)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "C2 CompilerThread1" (javaThreadId = 9)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "JFR Recorder Thread" (javaThreadId = 15)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 0 bytes
  thread = "C2 CompilerThread2" (javaThreadId = 10)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:13.915
  allocated = 24 bytes
  thread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.PhysicalMemory {
  startTime = 17:41:13.915
  totalSize = 15.9 GB
  usedSize = 12.3 GB
}

jdk.ThreadDump {
  startTime = 17:41:13.915
  result = "2024-07-10 17:41:13
Full thread dump OpenJDK 64-Bit Server VM (17.0.11+9-LTS mixed mode, sharing):

Threads class SMR info:
_java_thread_list=0x000001fd142ac830, length=16, elements={
0x000001fcaaa6a480, 0x000001fccd843ad0, 0x000001fccd844950, 0x000001fccd855fa0,
0x000001fccd856b60, 0x000001fccd857620, 0x000001fccd858ff0, 0x000001fccd859a60,
0x000001fccd85b470, 0x000001fccd89b760, 0x000001fccdbf6400, 0x000001fccddd30c0,
0x000001fccddbab70, 0x000001fd1389d470, 0x000001fccdd51310, 0x000001fd1472f320
}

"main" #1 prio=5 os_prio=0 cpu=234.38ms elapsed=0.74s tid=0x000001fcaaa6a480 nid=0x54b0 waiting on condition  [0x0000009f821fe000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@17.0.11/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@17.0.11/RequestEngine.java:70)
	at jdk.jfr.internal.RequestEngine.doChunk(jdk.jfr@17.0.11/RequestEngine.java:186)
	at jdk.jfr.internal.RequestEngine.doChunkBegin(jdk.jfr@17.0.11/RequestEngine.java:179)
	at jdk.jfr.internal.PlatformRecorder.start(jdk.jfr@17.0.11/PlatformRecorder.java:288)
	- locked <0x00000007111ddef0> (a jdk.jfr.internal.PlatformRecorder)
	at jdk.jfr.internal.PlatformRecording.start(jdk.jfr@17.0.11/PlatformRecording.java:123)
	- locked <0x00000007111ddef0> (a jdk.jfr.internal.PlatformRecorder)
	at jdk.jfr.Recording.start(jdk.jfr@17.0.11/Recording.java:184)
	at jdk.jfr.internal.dcmd.DCmdStart.execute(jdk.jfr@17.0.11/DCmdStart.java:197)
	at jdk.jfr.internal.dcmd.AbstractDCmd.execute(jdk.jfr@17.0.11/AbstractDCmd.java:88)

"Reference Handler" #2 daemon prio=10 os_prio=2 cpu=0.00ms elapsed=0.71s tid=0x000001fccd843ad0 nid=0x4640 waiting on condition  [0x0000009f828ff000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@17.0.11/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@17.0.11/Reference.java:253)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@17.0.11/Reference.java:215)

"Finalizer" #3 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=0.71s tid=0x000001fccd844950 nid=0x3bc0 in Object.wait()  [0x0000009f829ff000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000071120d5d0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:155)
	- locked <0x000000071120d5d0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@17.0.11/Finalizer.java:172)

"Signal Dispatcher" #4 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=0.70s tid=0x000001fccd855fa0 nid=0x2394 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Attach Listener" #5 daemon prio=5 os_prio=2 cpu=15.62ms elapsed=0.70s tid=0x000001fccd856b60 nid=0x57f4 runnable  [0x0000009f82bfd000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.management.DefaultPlatformMBeanProvider.init(java.management@17.0.11/DefaultPlatformMBeanProvider.java:122)
	at java.lang.management.DefaultPlatformMBeanProvider.<init>(java.management@17.0.11/DefaultPlatformMBeanProvider.java:44)
	at java.lang.management.ManagementFactory$PlatformMBeanFinder$1.run(java.management@17.0.11/ManagementFactory.java:931)
	at java.lang.management.ManagementFactory$PlatformMBeanFinder$1.run(java.management@17.0.11/ManagementFactory.java:924)
	at java.security.AccessController.executePrivileged(java.base@17.0.11/AccessController.java:776)
	at java.security.AccessController.doPrivileged(java.base@17.0.11/AccessController.java:399)
	at java.security.AccessController.doPrivileged(java.base@17.0.11/AccessController.java:460)
	at java.lang.management.ManagementFactory$PlatformMBeanFinder.<clinit>(java.management@17.0.11/ManagementFactory.java:923)
	at java.lang.management.ManagementFactory.platformComponents(java.management@17.0.11/ManagementFactory.java:915)
	at java.lang.management.ManagementFactory.getPlatformMBeanServer(java.management@17.0.11/ManagementFactory.java:485)
	- locked <0x00000007101d0a10> (a java.lang.Class for java.lang.management.ManagementFactory)
	at sun.management.jmxremote.ConnectorBootstrap.startLocalConnectorServer(jdk.management.agent@17.0.11/ConnectorBootstrap.java:543)
	at jdk.internal.agent.Agent.startLocalManagementAgent(jdk.management.agent@17.0.11/Agent.java:318)
	- locked <0x00000007101c3288> (a java.lang.Class for jdk.internal.agent.Agent)

"Service Thread" #6 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=0.70s tid=0x000001fccd857620 nid=0x3bf4 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Monitor Deflation Thread" #7 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=0.70s tid=0x000001fccd858ff0 nid=0x3d48 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #8 daemon prio=9 os_prio=2 cpu=15.62ms elapsed=0.70s tid=0x000001fccd859a60 nid=0x3a50 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling: 1230       4       java.util.HashMap::put (13 bytes)

"C1 CompilerThread0" #11 daemon prio=9 os_prio=2 cpu=31.25ms elapsed=0.70s tid=0x000001fccd85b470 nid=0x5440 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling: 1371       2       jdk.jfr.internal.EventWriter::putStringValue (56 bytes)

"Sweeper thread" #12 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=0.70s tid=0x000001fccd89b760 nid=0x22b4 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #13 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=0.67s tid=0x000001fccdbf6400 nid=0xa38 in Object.wait()  [0x0000009f831ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x00000007112ee9f0> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:155)
	- locked <0x00000007112ee9f0> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@17.0.11/CleanerImpl.java:140)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)
	at jdk.internal.misc.InnocuousThread.run(java.base@17.0.11/InnocuousThread.java:162)

"Monitor Ctrl-Break" #14 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=0.58s tid=0x000001fccddd30c0 nid=0x1df8 runnable  [0x0000009f832fe000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.SocketDispatcher.read0(java.base@17.0.11/Native Method)
	at sun.nio.ch.SocketDispatcher.read(java.base@17.0.11/SocketDispatcher.java:46)
	at sun.nio.ch.NioSocketImpl.tryRead(java.base@17.0.11/NioSocketImpl.java:266)
	at sun.nio.ch.NioSocketImpl.implRead(java.base@17.0.11/NioSocketImpl.java:317)
	at sun.nio.ch.NioSocketImpl.read(java.base@17.0.11/NioSocketImpl.java:355)
	at sun.nio.ch.NioSocketImpl$1.read(java.base@17.0.11/NioSocketImpl.java:808)
	at java.net.Socket$SocketInputStream.read(java.base@17.0.11/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@17.0.11/StreamDecoder.java:281)
	at sun.nio.cs.StreamDecoder.implRead(java.base@17.0.11/StreamDecoder.java:324)
	at sun.nio.cs.StreamDecoder.read(java.base@17.0.11/StreamDecoder.java:189)
	- locked <0x00000007110fb688> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@17.0.11/InputStreamReader.java:177)
	at java.io.BufferedReader.fill(java.base@17.0.11/BufferedReader.java:162)
	at java.io.BufferedReader.readLine(java.base@17.0.11/BufferedReader.java:329)
	- locked <0x00000007110fb688> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@17.0.11/BufferedReader.java:396)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:54)

"C2 CompilerThread1" #9 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=0.54s tid=0x000001fccddbab70 nid=0x4a84 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling: 1231       4       java.util.HashMap::putVal (300 bytes)

"JFR Recorder Thread" #15 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=0.51s tid=0x000001fd1389d470 nid=0x45e8 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread2" #10 daemon prio=9 os_prio=2 cpu=62.50ms elapsed=0.38s tid=0x000001fccdd51310 nid=0x54e0 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   Compiling:  712       4       jdk.internal.org.objectweb.asm.Frame::execute (2305 bytes)

"JFR Periodic Tasks" #16 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=0.11s tid=0x000001fd1472f320 nid=0x47cc waiting for monitor entry  [0x0000009f836ff000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@17.0.11/PlatformRecorder.java:511)
	- waiting to lock <0x00000007111ddef0> (a jdk.jfr.internal.PlatformRecorder)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@17.0.11/PlatformRecorder.java:449)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$66/0x000001fccf0464c0.run(jdk.jfr@17.0.11/Unknown Source)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)

"VM Thread" os_prio=2 cpu=15.62ms elapsed=0.72s tid=0x000001fccd83dfa0 nid=0x1120 runnable  

"GC Thread#0" os_prio=2 cpu=0.00ms elapsed=0.74s tid=0x000001fcaaad84e0 nid=0x5a6c runnable  

"G1 Main Marker" os_prio=2 cpu=0.00ms elapsed=0.74s tid=0x000001fcaaae92f0 nid=0x5bac runnable  

"G1 Conc#0" os_prio=2 cpu=0.00ms elapsed=0.74s tid=0x000001fcaaaea4b0 nid=0x5a8c runnable  

"G1 Refine#0" os_prio=2 cpu=0.00ms elapsed=0.73s tid=0x000001fcaab1e070 nid=0x5b04 runnable  

"G1 Service" os_prio=2 cpu=0.00ms elapsed=0.73s tid=0x000001fcaab1eaa0 nid=0x53b0 runnable  

JNI global refs: 31, weak refs: 3

"
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.exe"
  baseAddress = 0x7FF7A2590000
  topAddress = 0x7FF7A259E000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\SYSTEM32\ntdll.dll"
  baseAddress = 0x7FFEC2990000
  topAddress = 0x7FFEC2BA7000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\KERNEL32.DLL"
  baseAddress = 0x7FFEC15C0000
  topAddress = 0x7FFEC1684000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\KERNELBASE.dll"
  baseAddress = 0x7FFEBFFE0000
  topAddress = 0x7FFEC038D000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\ucrtbase.dll"
  baseAddress = 0x7FFEC03C0000
  topAddress = 0x7FFEC04D1000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\VCRUNTIME140.dll"
  baseAddress = 0x7FFEA08C0000
  topAddress = 0x7FFEA08DB000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jli.dll"
  baseAddress = 0x7FFEA19C0000
  topAddress = 0x7FFEA19D7000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\USER32.dll"
  baseAddress = 0x7FFEC1400000
  topAddress = 0x7FFEC15AE000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955\COMCTL32.dll"
  baseAddress = 0x7FFE99FB0000
  topAddress = 0x7FFE9A243000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\win32u.dll"
  baseAddress = 0x7FFEC0390000
  topAddress = 0x7FFEC03B6000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\msvcrt.dll"
  baseAddress = 0x7FFEC2170000
  topAddress = 0x7FFEC2217000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\GDI32.dll"
  baseAddress = 0x7FFEC11B0000
  topAddress = 0x7FFEC11D9000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\gdi32full.dll"
  baseAddress = 0x7FFEC04E0000
  topAddress = 0x7FFEC05F9000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\msvcp_win.dll"
  baseAddress = 0x7FFEC0600000
  topAddress = 0x7FFEC069A000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\IMM32.DLL"
  baseAddress = 0x7FFEC0C40000
  topAddress = 0x7FFEC0C71000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\vcruntime140_1.dll"
  baseAddress = 0x7FFEBC1C0000
  topAddress = 0x7FFEBC1CC000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\msvcp140.dll"
  baseAddress = 0x7FFE7AD00000
  topAddress = 0x7FFE7AD8D000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\server\jvm.dll"
  baseAddress = 0x7FFE35E80000
  topAddress = 0x7FFE36AE6000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\ADVAPI32.dll"
  baseAddress = 0x7FFEC1340000
  topAddress = 0x7FFEC13F2000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\sechost.dll"
  baseAddress = 0x7FFEC1690000
  topAddress = 0x7FFEC1739000
}

jdk.NativeLibrary {
  startTime = 17:41:13.918
  name = "C:\Windows\System32\bcrypt.dll"
  baseAddress = 0x7FFEC06A0000
  topAddress = 0x7FFEC06C8000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\System32\RPCRT4.dll"
  baseAddress = 0x7FFEC27B0000
  topAddress = 0x7FFEC28C4000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\POWRPROF.dll"
  baseAddress = 0x7FFEBF4F0000
  topAddress = 0x7FFEBF53D000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\WSOCK32.dll"
  baseAddress = 0x7FFEA7390000
  topAddress = 0x7FFEA7399000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\WINMM.dll"
  baseAddress = 0x7FFEBA330000
  topAddress = 0x7FFEBA364000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\System32\WS2_32.dll"
  baseAddress = 0x7FFEC28D0000
  topAddress = 0x7FFEC2941000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\VERSION.dll"
  baseAddress = 0x7FFEB6E90000
  topAddress = 0x7FFEB6E9A000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\UMPDC.dll"
  baseAddress = 0x7FFEBF4C0000
  topAddress = 0x7FFEBF4D3000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\kernel.appcore.dll"
  baseAddress = 0x7FFEBEBC0000
  topAddress = 0x7FFEBEBD8000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jimage.dll"
  baseAddress = 0x7FFEBC610000
  topAddress = 0x7FFEBC61A000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\SYSTEM32\DBGHELP.DLL"
  baseAddress = 0x7FFEBD220000
  topAddress = 0x7FFEBD452000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\System32\combase.dll"
  baseAddress = 0x7FFEC2270000
  topAddress = 0x7FFEC25F8000
}

jdk.NativeLibrary {
  startTime = 17:41:13.919
  name = "C:\Windows\System32\OLEAUT32.dll"
  baseAddress = 0x7FFEC10D0000
  topAddress = 0x7FFEC11A7000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Windows\SYSTEM32\dbgcore.DLL"
  baseAddress = 0x7FFEAE350000
  topAddress = 0x7FFEAE382000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Windows\System32\bcryptPrimitives.dll"
  baseAddress = 0x7FFEBFF60000
  topAddress = 0x7FFEBFFDB000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\instrument.dll"
  baseAddress = 0x7FFEBC550000
  topAddress = 0x7FFEBC55E000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.dll"
  baseAddress = 0x7FFEAD290000
  topAddress = 0x7FFEAD2B5000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jsvml.dll"
  baseAddress = 0x7FFE93C20000
  topAddress = 0x7FFE93CF7000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Windows\System32\SHELL32.dll"
  baseAddress = 0x7FFEC1750000
  topAddress = 0x7FFEC1FAF000
}

jdk.Deoptimization {
  startTime = 17:41:13.920
  compileId = 1231
  compiler = "c2"
  method = java.util.HashMap.putVal(int, Object, Object, boolean, boolean)
  lineNumber = 653
  bci = 236
  instruction = "ifeq"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Windows\SYSTEM32\windows.storage.dll"
  baseAddress = 0x7FFEBD8F0000
  topAddress = 0x7FFEBE1EC000
}

jdk.NativeLibrary {
  startTime = 17:41:13.920
  name = "C:\Windows\SYSTEM32\wintypes.dll"
  baseAddress = 0x7FFEBD7B0000
  topAddress = 0x7FFEBD8EF000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Windows\System32\SHCORE.dll"
  baseAddress = 0x7FFEC2070000
  topAddress = 0x7FFEC2164000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Windows\System32\shlwapi.dll"
  baseAddress = 0x7FFEC0C80000
  topAddress = 0x7FFEC0CDE000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Windows\SYSTEM32\profapi.dll"
  baseAddress = 0x7FFEBFBF0000
  topAddress = 0x7FFEBFC11000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\zip.dll"
  baseAddress = 0x7FFEAD180000
  topAddress = 0x7FFEAD198000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\net.dll"
  baseAddress = 0x7FFEB9F60000
  topAddress = 0x7FFEB9F79000
}

jdk.JavaErrorThrow {
  startTime = 17:41:13.921
  message = "'int java.lang.invoke.DirectMethodHandle$Holder.invokeInterface(java.lang.Object, java.lang.Object)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Windows\SYSTEM32\WINHTTP.dll"
  baseAddress = 0x7FFEBEBE0000
  topAddress = 0x7FFEBED16000
}

jdk.NativeLibrary {
  startTime = 17:41:13.921
  name = "C:\Windows\system32\mswsock.dll"
  baseAddress = 0x7FFEBF160000
  topAddress = 0x7FFEBF1C9000
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\nio.dll"
  baseAddress = 0x7FFEB7AF0000
  topAddress = 0x7FFEB7B06000
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\breakgen64.dll"
  baseAddress = 0x7FFEBC150000
  topAddress = 0x7FFEBC16A000
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\extnet.dll"
  baseAddress = 0x7FFEA08E0000
  topAddress = 0x7FFEA08E9000
}

jdk.JavaErrorThrow {
  startTime = 17:41:13.922
  message = "Found class java.lang.Object, but interface was expected"
  thrownClass = java.lang.IncompatibleClassChangeError (classLoader = bootstrap)
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    java.lang.invoke.MemberName$Factory.resolve(byte, MemberName, Class, int, boolean) line: 1085
    ...
  ]
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Windows\SYSTEM32\DNSAPI.dll"
  baseAddress = 0x7FFEBE470000
  topAddress = 0x7FFEBE568000
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Windows\SYSTEM32\IPHLPAPI.DLL"
  baseAddress = 0x7FFEBE440000
  topAddress = 0x7FFEBE46D000
}

jdk.NativeLibrary {
  startTime = 17:41:13.922
  name = "C:\Windows\System32\NSI.dll"
  baseAddress = 0x7FFEC1740000
  topAddress = 0x7FFEC1749000
}

jdk.NativeLibrary {
  startTime = 17:41:13.923
  name = "C:\Windows\System32\rasadhlp.dll"
  baseAddress = 0x7FFEB87F0000
  topAddress = 0x7FFEB87FA000
}

jdk.NativeLibrary {
  startTime = 17:41:13.923
  name = "C:\Windows\System32\fwpuclnt.dll"
  baseAddress = 0x7FFEB84F0000
  topAddress = 0x7FFEB8573000
}

jdk.NativeLibrary {
  startTime = 17:41:13.923
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\management.dll"
  baseAddress = 0x7FFEA5F80000
  topAddress = 0x7FFEA5F89000
}

jdk.NativeLibrary {
  startTime = 17:41:13.923
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\management_ext.dll"
  baseAddress = 0x7FFEA5F70000
  topAddress = 0x7FFEA5F7B000
}

jdk.NativeLibrary {
  startTime = 17:41:13.923
  name = "C:\Windows\System32\PSAPI.DLL"
  baseAddress = 0x7FFEC15B0000
  topAddress = 0x7FFEC15B8000
}

jdk.CompilerConfiguration {
  startTime = 17:41:13.923
  threadCount = 4
  tieredCompilation = true
}

jdk.CodeCacheStatistics {
  startTime = 17:41:13.923
  codeBlobType = "CodeHeap 'non-profiled nmethods'"
  startAddress = 0x1FCBA060000
  reservedTopAddress = 0x1FCC1590000
  entryCount = 372
  methodCount = 372
  adaptorCount = 0
  unallocatedCapacity = 116.8 MB
  fullCount = 0
}

jdk.CodeCacheStatistics {
  startTime = 17:41:13.923
  codeBlobType = "CodeHeap 'profiled nmethods'"
  startAddress = 0x1FCB2590000
  reservedTopAddress = 0x1FCB9AC0000
  entryCount = 974
  methodCount = 974
  adaptorCount = 0
  unallocatedCapacity = 114.9 MB
  fullCount = 0
}

jdk.CodeCacheStatistics {
  startTime = 17:41:13.923
  codeBlobType = "CodeHeap 'non-nmethods'"
  startAddress = 0x1FCB9AC0000
  reservedTopAddress = 0x1FCBA060000
  entryCount = 457
  methodCount = 0
  adaptorCount = 369
  unallocatedCapacity = 4.5 MB
  fullCount = 0
}

jdk.CodeCacheConfiguration {
  startTime = 17:41:13.923
  initialSize = 2.4 MB
  reservedSize = 240.0 MB
  nonNMethodSize = 5.6 MB
  profiledSize = 117.2 MB
  nonProfiledSize = 117.2 MB
  expansionSize = 64.0 kB
  minBlockLength = 6 bytes
  startAddress = 0x1FCB2590000
  reservedTopAddress = 0x1FCC1590000
}

jdk.CodeSweeperStatistics {
  startTime = 17:41:13.923
  sweepCount = 1
  methodReclaimedCount = 0
  totalSweepTime = 1.84 ms
  peakFractionTime = 1.84 ms
  peakSweepTime = 1.84 ms
}

jdk.CodeSweeperConfiguration {
  startTime = 17:41:13.923
  sweeperEnabled = true
  flushingEnabled = true
  sweepThreshold = 1.2 MB
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "RTMRetryCount"
  value = 5
  origin = "Default"
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeObjectsALotThreadCountSingle"
  value = 1
  origin = "Default"
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeObjectsALotThreadCountAll"
  value = 1
  origin = "Default"
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "VerifyMetaspaceInterval"
  value = 0
  origin = "Default"
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "ParGCArrayScanChunk"
  value = 50
  origin = "Default"
}

jdk.IntFlag {
  startTime = 17:41:13.923
  name = "ActiveProcessorCount"
  value = -1
  origin = "Default"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "StringDeduplicationAgeThreshold"
  value = 3
  origin = "Default"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "G1RefProcDrainInterval"
  value = 1000
  origin = "Default"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementThreads"
  value = 8
  origin = "Ergonomic"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "ParallelGCThreads"
  value = 8
  origin = "Default"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "ConcGCThreads"
  value = 2
  origin = "Ergonomic"
}

jdk.UnsignedIntFlag {
  startTime = 17:41:13.923
  name = "MarkSweepAlwaysCompactCount"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ObjectAlignmentInBytes"
  value = 8
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "UseSSE"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "UseAVX"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ValueMapInitialSize"
  value = 11
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ValueMapMaxLoopSize"
  value = 8
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "C1MaxInlineSize"
  value = 35
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "C1MaxTrivialSize"
  value = 6
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "C1MaxInlineLevel"
  value = 9
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "C1MaxRecursiveInlineLevel"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "C1InlineStackLimit"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NestedInliningSizeRatio"
  value = 90
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TraceLinearScanLevel"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NMethodSizeLimit"
  value = 524288
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InstructionCountCutoff"
  value = 37000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OptoPrologueNops"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InteriorEntryAlignment"
  value = 16
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxLoopPad"
  value = 11
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxVectorSize"
  value = 32
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NumberOfLoopInstrToAlign"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "IndexSetWatch"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OptoNodeListSize"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OptoBlockListSize"
  value = 8
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OptoPeepholeAt"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BreakAtNode"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LoopUnrollLimit"
  value = 60
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LoopPercentProfileLimit"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LoopMaxUnroll"
  value = 16
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LoopUnrollMin"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "UnrollLimitForProfileCheck"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MultiArrayExpandLimit"
  value = 6
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TrackedInitializationLimit"
  value = 50
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "RegisterCostAreaRatio"
  value = 16000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FLOATPRESSURE"
  value = 14
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "INTPRESSURE"
  value = 13
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PartialPeelNewPhiDelta"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ConditionalMoveLimit"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PrintIdealGraphLevel"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PrintIdealGraphPort"
  value = 4444
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ImplicitNullCheckThreshold"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LoopOptsCount"
  value = 43
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NodeCountInliningCutoff"
  value = 18000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxNodeLimit"
  value = 80000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NodeLimitFudgeFactor"
  value = 2000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MinJumpTableSize"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxJumpTableSize"
  value = 65000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxJumpTableSparseness"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AutoBoxCacheMax"
  value = 128
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "EliminateAllocationArraySizeLimit"
  value = 64
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ValueSearchLimit"
  value = 1000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxLabelRootDepth"
  value = 1100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BlockLayoutMinDiamondPercentage"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TypeProfileMajorReceiverPercent"
  value = 90
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FreqCountInvocations"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AliasLevel"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxInlineLevel"
  value = 15
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxRecursiveInlineLevel"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InlineSmallCode"
  value = 2500
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxInlineSize"
  value = 35
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FreqInlineSize"
  value = 325
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxTrivialSize"
  value = 6
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "LiveNodeCountInliningCutoff"
  value = 40000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ArrayCopyLoadStoreMaxElem"
  value = 8
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CICrashAt"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIStart"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIStop"
  value = 2147483647
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIStartOSR"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIStopOSR"
  value = 2147483647
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIBreakAtOSR"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CIBreakAt"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier0InvokeNotifyFreqLog"
  value = 7
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier2InvokeNotifyFreqLog"
  value = 11
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3InvokeNotifyFreqLog"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier23InlineeNotifyFreqLog"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier0BackedgeNotifyFreqLog"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier2BackedgeNotifyFreqLog"
  value = 14
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3BackedgeNotifyFreqLog"
  value = 13
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier2CompileThreshold"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier2BackEdgeThreshold"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3InvocationThreshold"
  value = 200
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3MinInvocationThreshold"
  value = 100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3CompileThreshold"
  value = 2000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3BackEdgeThreshold"
  value = 60000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier4InvocationThreshold"
  value = 5000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier4MinInvocationThreshold"
  value = 600
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier4CompileThreshold"
  value = 15000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier4BackEdgeThreshold"
  value = 40000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3DelayOn"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3DelayOff"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier3LoadFeedback"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier4LoadFeedback"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TieredCompileTaskTimeout"
  value = 50
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TieredStopAtLevel"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "Tier0ProfilingStartPercentage"
  value = 200
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TieredRateUpdateMinTime"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TieredRateUpdateMaxTime"
  value = 25
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OnStackReplacePercentage"
  value = 140
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InterpreterProfilePercentage"
  value = 33
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ReplaySuppressInitializers"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BCEATraceLevel"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxBCEAEstimateLevel"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxBCEAEstimateSize"
  value = 150
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OSROnlyBCI"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "DesiredMethodLimit"
  value = 8000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "HugeMethodLimit"
  value = 8000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "HeapDumpGzipLevel"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxJNILocalCapacity"
  value = 65536
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ContendedPaddingWidth"
  value = 128
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BiasedLockingStartupDelay"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BiasedLockingBulkRebiasThreshold"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BiasedLockingBulkRevokeThreshold"
  value = 40
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BiasedLockingDecayTime"
  value = 25000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CICompilerCount"
  value = 4
  origin = "Ergonomic"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FastAllocateSizeLimit"
  value = 131072
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TypeProfileArgsLimit"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TypeProfileParmsLimit"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ProfileMaturityPercentage"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CounterHalfLifeTime"
  value = 30
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CounterDecayMinIntervalLength"
  value = 500
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocatePrefetchStyle"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocatePrefetchDistance"
  value = 192
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocatePrefetchLines"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocateInstancePrefetchLines"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocatePrefetchStepSize"
  value = 64
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "AllocatePrefetchInstr"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "SelfDestructTimer"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxJavaStackTraceDepth"
  value = 1024
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "SafepointTimeoutDelay"
  value = 10000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NmethodSweepActivity"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "SweeperLogEntries"
  value = 1024
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MallocCatchPtr"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StackPrintLimit"
  value = 100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxElementPrintSize"
  value = 256
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxSubklassPrintSize"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MaxForceInlineLevel"
  value = 100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MinInliningThreshold"
  value = 250
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MethodHistogramCutoff"
  value = 100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "DontYieldALotInterval"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeALotInterval"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ZombieALotInterval"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TypeProfileWidth"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BciProfileWidth"
  value = 2
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerMethodRecompilationCutoff"
  value = 400
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerBytecodeRecompilationCutoff"
  value = 200
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerMethodTrapLimit"
  value = 100
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerBytecodeTrapLimit"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InlineFrequencyRatio"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InlineThrowCount"
  value = 50
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "InlineThrowMaxSize"
  value = 200
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "SoftRefLRUPolicyMSPerMB"
  value = 1000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StackYellowPages"
  value = 3
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StackRedPages"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StackReservedPages"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StackShadowPages"
  value = 7
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ThreadStackSize"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "VMThreadStackSize"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CompilerThreadStackSize"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CodeEntryAlignment"
  value = 32
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "OptoLoopAlignment"
  value = 16
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "BinarySwitchThreshold"
  value = 5
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "StopInterpreterAt"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "TraceBytecodesAt"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ThreadPriorityPolicy"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CompilerThreadPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "VMThreadPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority1_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority2_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority3_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority4_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority5_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority6_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority7_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority8_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority9_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "JavaPriority10_To_OSPriority"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "NewCodeParameter"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "MinOopMapAllocation"
  value = 8
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "CompileThreshold"
  value = 10000
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerfDataSamplingInterval"
  value = 50
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerfDataMemorySize"
  value = 32768
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PerfMaxStringConstLength"
  value = 1024
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "UnguardOnExecutionViolation"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1SATBProcessCompletedThreshold"
  value = 20
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1RSetUpdatingPauseTimePercent"
  value = 10
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1RSetRegionEntriesBase"
  value = 256
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1RSetRegionEntries"
  value = 512
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1RSetSparseRegionEntriesBase"
  value = 4
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1RSetSparseRegionEntries"
  value = 16
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "G1MaxVerifyFailures"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "RefDiscoveryPolicy"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PSAdaptiveSizePolicyResizeVirtualSpaceAlot"
  value = -1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PrefetchCopyIntervalInBytes"
  value = 576
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PrefetchScanIntervalInBytes"
  value = 576
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "PrefetchFieldsAhead"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ConcGCYieldTimeout"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "ScavengeALotInterval"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FullGCALotInterval"
  value = 1
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FullGCALotStart"
  value = 0
  origin = "Default"
}

jdk.LongFlag {
  startTime = 17:41:13.923
  name = "FullGCALotDummies"
  value = 32768
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PrintIdealIndentThreshold"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "LoopStripMiningIter"
  value = 1000
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "LoopStripMiningIterShortLoop"
  value = 100
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "StressLongCountedLoop"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "IncreaseFirstTierCompileThresholdAt"
  value = 50
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "HeapSearchSteps"
  value = 3
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NUMAChunkResizeWeight"
  value = 20
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NUMAPageScanRate"
  value = 256
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ErrorHandlerTest"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TestCrashInErrorHandler"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PreallocatedOutOfMemoryErrorCount"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ProcessDistributionStride"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TypeProfileLevel"
  value = 111
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinHeapFreeRatio"
  value = 40
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxHeapFreeRatio"
  value = 70
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxMetaspaceFreeRatio"
  value = 70
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinMetaspaceFreeRatio"
  value = 40
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitialCodeCacheSize"
  value = 2555904
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "CodeCacheMinimumUseSpace"
  value = 409600
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ReservedCodeCacheSize"
  value = 251658240
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NonProfiledCodeHeapSize"
  value = 122909434
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ProfiledCodeHeapSize"
  value = 122909434
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NonNMethodCodeHeapSize"
  value = 5839372
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "CodeCacheExpansionSize"
  value = 65536
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "StartAggressiveSweepingAt"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "SharedSymbolTableBucketSize"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "StringTableSize"
  value = 65536
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConfidencePercent"
  value = 50
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1SATBBufferEnqueueingThresholdPercent"
  value = 60
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementServiceIntervalMillis"
  value = 300
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRSHotCardLimit"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ReservePercent"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1DummyRegionsPerGC"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1HeapWastePercent"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1MixedGCCountTarget"
  value = 8
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotCount"
  value = 1000
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotInterval"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1PeriodicGCInterval"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "HeapMaximumCompactionInterval"
  value = 20
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "HeapFirstMaximumCompactionCount"
  value = 3
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCWorkerDelayMillis"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ZUncommitDelay"
  value = 300
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCLockerEdenExpansionPercent"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ParallelGCBufferWastePct"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TargetPLABWastePct"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PLABWeight"
  value = 75
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitiatingHeapOccupancyPercent"
  value = 45
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PromotionFailureALotCount"
  value = 1000
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PromotionFailureALotInterval"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ObjArrayMarkingStride"
  value = 2048
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MetadataAllocationFailALotInterval"
  value = 1000
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxRAMFraction"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinRAMFraction"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitialRAMFraction"
  value = 64
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxVirtMemFraction"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizeThroughPutPolicy"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizePolicyInitializingSteps"
  value = 20
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizePolicyReadyThreshold"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizePolicyOutputInterval"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizePolicyWeight"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveTimeWeight"
  value = 25
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PausePadding"
  value = 1
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PromotedPadding"
  value = 3
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "SurvivorPadding"
  value = 3
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ThresholdTolerance"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizePolicyCollectionCostMargin"
  value = 50
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "YoungGenerationSizeIncrement"
  value = 20
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "YoungGenerationSizeSupplement"
  value = 80
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "YoungGenerationSizeSupplementDecay"
  value = 8
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TenuredGenerationSizeIncrement"
  value = 20
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TenuredGenerationSizeSupplement"
  value = 80
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TenuredGenerationSizeSupplementDecay"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxGCPauseMillis"
  value = 200
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCPauseIntervalMillis"
  value = 201
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxGCMinorPauseMillis"
  value = -1
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCTimeRatio"
  value = 12
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizeDecrementScaleFactor"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AdaptiveSizeMajorGCDecayTimeScale"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinSurvivorRatio"
  value = 3
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitialSurvivorRatio"
  value = 8
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCTimeLimit"
  value = 98
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCHeapFreeLimit"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCOverheadLimitThreshold"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "SurvivorRatio"
  value = 8
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NewRatio"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "QueuedAllocationWarningCount"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxTenuringThreshold"
  value = 15
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitialTenuringThreshold"
  value = 7
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TargetSurvivorRatio"
  value = 50
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MarkSweepDeadRatio"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCExpandToAllocateDelayMillis"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "GCDrainStackTargetSize"
  value = 64
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TLABAllocationWeight"
  value = 35
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TLABWasteTargetPercent"
  value = 1
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TLABRefillWasteFraction"
  value = 64
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TLABWasteIncrement"
  value = 4
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeObjectsALotInterval"
  value = 5
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ErrorLogTimeout"
  value = 120
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxDirectMemorySize"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxRAM"
  value = 137438953472
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NUMAInterleaveGranularity"
  value = 2097152
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NUMASpaceResizeRate"
  value = 1073741824
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "LargePageSizeInBytes"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "LargePageHeapSizeThreshold"
  value = 134217728
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MetaspaceSize"
  value = 22020096
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxMetaspaceSize"
  value = -1
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "CompressedClassSpaceSize"
  value = 1073741824
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "CompressedClassSpaceBaseAddress"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinHeapDeltaBytes"
  value = 2097152
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinMetaspaceExpansion"
  value = 327680
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxMetaspaceExpansion"
  value = 5439488
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "JVMInvokeMethodSlack"
  value = 8192
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "SharedBaseAddress"
  value = 2185299492864
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "AsyncLogBufferSize"
  value = 2097152
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1SATBBufferSize"
  value = 1024
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1UpdateBufferSize"
  value = 256
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementYellowZone"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementRedZone"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementGreenZone"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRefinementThresholdStep"
  value = 2
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1ConcRSLogCacheSize"
  value = 10
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "G1HeapRegionSize"
  value = 2097152
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ParallelOldDeadWoodLimiterMean"
  value = 50
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ParallelOldDeadWoodLimiterStdDev"
  value = 80
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ZMarkStackSpaceLimit"
  value = 8589934592
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "HeapSizePerGCThread"
  value = 43620760
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PreTouchParallelChunkSize"
  value = 1073741824
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MarkStackSizeMax"
  value = 536870912
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MarkStackSize"
  value = 4194304
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "ErgoHeapSizeLimit"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "BaseFootPrintEstimate"
  value = 268435456
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinHeapSize"
  value = 8388608
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "InitialHeapSize"
  value = 268435456
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxHeapSize"
  value = 4273995776
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "SoftMaxHeapSize"
  value = 4273995776
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "OldSize"
  value = 5452592
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NewSize"
  value = 1363144
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MaxNewSize"
  value = 2562719744
  origin = "Ergonomic"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "HeapBaseMinAddress"
  value = 2147483648
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "PretenureSizeThreshold"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "NewSizeThreadIncrease"
  value = 5320
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "MinTLABSize"
  value = 2048
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "TLABSize"
  value = 0
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "YoungPLABSize"
  value = 4096
  origin = "Default"
}

jdk.UnsignedLongFlag {
  startTime = 17:41:13.923
  name = "OldPLABSize"
  value = 1024
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "EscapeAnalysisTimeout"
  value = 20.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "CompileThresholdScaling"
  value = 1.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "SweeperThreshold"
  value = 0.5
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "G1ConcMarkStepDurationMillis"
  value = 10.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "G1PeriodicGCSystemLoadThreshold"
  value = 0.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "ZAllocationSpikeTolerance"
  value = 2.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "ZFragmentationLimit"
  value = 25.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "ZCollectionInterval"
  value = 0.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "MaxRAMPercentage"
  value = 25.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "MinRAMPercentage"
  value = 50.0
  origin = "Default"
}

jdk.DoubleFlag {
  startTime = 17:41:13.923
  name = "InitialRAMPercentage"
  value = 1.5625
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCompressedOops"
  value = true
  origin = "Ergonomic"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCompressedClassPointers"
  value = true
  origin = "Ergonomic"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "IEEEPrecision"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseStoreImmI16"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCLMUL"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseNewLongLShift"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAddressNop"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXmmLoadAndClearUpper"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXmmRegToRegMoveAll"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXmmI2D"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXmmI2F"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseUnalignedLoadStores"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXMMForObjInit"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastStosb"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseRTMLocking"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseRTMDeopt"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCountLeadingZerosInstruction"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCountTrailingZerosInstruction"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSSE42Intrinsics"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseBMI1Instructions"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseBMI2Instructions"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "JVMCIUseFastLocking"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintC1Statistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintInitialBlockList"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFG"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFG0"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFG1"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFG2"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIRDuringConstruction"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintPhiFunctions"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIR0"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIR1"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIR2"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintSimpleStubs"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseC1Optimizations"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SelectivePhiFunctions"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptimizeIfOps"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DoCEE"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCEE"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLocalValueNumbering"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseGlobalValueNumbering"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLoopInvariantCodeMotion"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePredicateFailedTraps"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressLoopInvariantCodeMotion"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceRangeCheckElimination"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AssertRangeCheckElimination"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressRangeCheckElimination"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintValueNumbering"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateBlocks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintBlockElimination"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateNullChecks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintNullCheckElimination"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateFieldAccess"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InlineMethodsWithExceptionHandlers"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InlineSynchronizedMethods"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CanonicalizeNodes"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCanonicalization"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseTableRanges"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIRWithLIR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintLIRWithAssembly"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CommentedAssembly"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LIRTracePeephole"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LIRTraceExecution"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CSEArrayLength"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TwoOperandLIRForm"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressLinearScan"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TimeLinearScan"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TimeEachLinearScan"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CountLinearScan"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1Breakpoint"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ImplicitDiv0Checks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PinAllInstructions"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastNewInstance"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastNewTypeArray"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastNewObjectArray"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastLocking"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSlowPath"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "GenerateArrayStoreCheck"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DeoptC1"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintBailouts"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePatching"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PatchALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintNotLoaded"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintLIR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BailoutAfterHIR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BailoutAfterLIR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BailoutOnExceptionHandlers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InstallMethods"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceFPUStack"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceFPURegisterUsage"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptimizeUnsafes"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintUnsafeOptimization"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ComputeExactFPURegisterUsage"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1ProfileCalls"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1ProfileVirtualCalls"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1ProfileInlinedCalls"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1ProfileBranches"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1ProfileCheckcasts"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1OptimizeVirtualCallProfiling"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "C1UpdateMethodData"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFGToFile"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressMethodHandleLinkerInlining"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlignVector"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIdeal"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOpto"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOptoInlining"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyIdealNodeCount"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIdealNodeCount"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoBreakpoint"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoBreakpointOSR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoBreakpointC2R"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoNoExecute"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOptoStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoPeephole"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFrameConverterAssembly"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintParseStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOptoPeephole"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCFGBlockFreq"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOptoParse"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SuperWordLoopUnrollAnalysis"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceSuperWordLoopUnrollAnalysis"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSubwordForMaxVector"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseVectorCmov"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceProfileTripCount"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCountedLoopSafepoints"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLoopPredicate"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLoopPredicate"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLoopOpts"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLoopLimitCheck"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceRangeLimitCheck"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptimizeFill"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOptimizeFill"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoCoalesce"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseUniqueSubclasses"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReduceFieldZeroing"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReduceInitialCardMarks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReduceBulkZeroing"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFPUForSpilling"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCISCSpill"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyGraphEdges"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyDUIterators"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyHashTableKeys"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyRegisterAllocator"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOptoPipelining"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOptoOutput"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoScheduling"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoRegScheduling"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PartialPeelLoop"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePartialPeeling"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PartialPeelAtUnsignedTests"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReassociateInvariants"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LoopUnswitching"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLoopUnswitching"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AllowVectorizeOnDemand"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSuperWord"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SuperWordRTDepCheck"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SuperWordReductions"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCMoveUnconditionally"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DoReserveCopyInSuperWord"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceSuperWord"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceNewVectors"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptoBundling"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintIdealGraph"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseBimorphicInlining"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseOnlyInlinedBimorphic"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SubsumeLoads"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressRecompilation"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseJumpTables"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDivMod"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateLocks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateNestedLocks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintLockStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintEliminateLocks"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateAutoBox"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePostallocExpand"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceReduceAllocationMerges"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DoEscapeAnalysis"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExitEscapeAnalysisOnTimeout"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintEscapeAnalysis"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EliminateAllocations"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintEliminateAllocations"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptimizePtrCompare"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOptimizePtrCompare"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyConnectionGraph"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseOptoBiasInlining"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OptimizeStringConcat"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintOptimizeStringConcat"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BlockLayoutByFrequency"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BlockLayoutRotateLoops"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BailoutToInterpreterForThrows"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ConvertCmpD2CmpF"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ConvertFloat2IntClipping"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "MonomorphicArrayCheck"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePhaseCCP"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintDominators"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PoisonOSREntry"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SoftMatchFailure"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InlineAccessors"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressReflectiveCode"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyLoopOptimizations"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceIterativeGVN"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyIterativeGVN"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceCISCSpill"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SplitIfBlocks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyAliases"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "IncrementalInline"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysIncrementalInline"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseTypeSpeculation"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TrapBasedRangeChecks"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressArrayCopyMacroNode"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RenumberLiveNodes"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseProfiledLoopPredicate"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CIPrintCompilerName"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CIPrintRequests"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CITime"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CITimeVerbose"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CITimeEach"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CICountOSR"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CICompileNatives"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CICompileOSR"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CIPrintMethodCodes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CIPrintTypeFlow"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CITraceTypeFlow"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CICompilerCountPerCPU"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CIObjectFactoryVerify"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintTieredEvents"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReplayCompiles"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReplayIgnoreInitErrors"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DumpReplayDataOnError"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EstimateArgEscape"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DontCompileHugeMethods"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CheckCompressedOops"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "JavaMonitorsInStackTrace"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLargePages"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLargePagesIndividualAllocation"
  value = false
  origin = "Ergonomic"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LargePagesIndividualAllocationInjectError"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseNUMA"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseNUMAInterleaving"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveNUMAChunkSizing"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "NUMAStats"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAES"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFMA"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSHA"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseBASE64Intrinsics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ForceTimeHighResolution"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TracePcPatching"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceRelocator"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "BackgroundCompilation"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "MethodFlushing"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyStack"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceDerivedPointers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceCodeBlobStacks"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintRewrites"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseInlineCaches"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CriticalJNINatives"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceCallFixup"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeRandom"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZombieALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "WalkStackALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DeoptimizeObjectsALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyLastFrame"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SafepointTimeout"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "MaxFDLimit"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyStackAtCalls"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceJavaAssertions"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyCodeCache"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseMallocOnly"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZapResourceArea"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZapVMHandleArea"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZapStackSegments"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZapUnusedHeapArea"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CheckZapUnusedHeapArea"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZapFillerObjects"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExecutingUnitTests"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TestSafeFetchInErrorHandler"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TestUnresponsiveErrorHandler"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "Verbose"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintMiscellaneous"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "WizardMode"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ShowMessageBoxOnError"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CreateCoredumpOnCrash"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SuppressFatalErrorMessage"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "HeapDumpBeforeFullGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "HeapDumpAfterFullGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "HeapDumpOnOutOfMemoryError"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCompilation"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintExtendedThreadInfo"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysRestoreFPU"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyAdapterSharing"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintNMethodStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintDebugInfo"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintRelocations"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintDependencies"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintExceptionHandlers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressCompiledExceptionHandlers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InterceptOSException"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCodeCache"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCodeCache2"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCodeCacheOnCompilation"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StackTraceInThrowable"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "OmitStackTraceInFastThrow"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ShowCodeDetailsInExceptionMessages"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintWarnings"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RegisterFinalizersAtInit"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RegisterReferences"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCodeCacheExtension"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UsePrivilegedStack"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ClassUnloading"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ClassUnloadingWithConcurrentMark"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintSystemDictionaryAtExit"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintClassLoaderDataGraphAtExit"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysLockClassLoader"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AllowParallelDefineClass"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DontYieldALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "FilterSpuriousWakeups"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ReduceSignalUsage"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LoadLineNumberTables"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LoadLocalVariableTables"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LoadLocalVariableTypeTables"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AllowUserSignalHandlers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSignalChaining"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RestoreMXCSROnJNICalls"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CheckJNICalls"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastJNIAccessors"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EagerXrunInit"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PreserveAllAnnotations"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseXMMForArrayCopy"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFieldLayout"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EnableContended"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RestrictContended"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseBiasedLocking"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExitOnOutOfMemoryError"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CrashOnOutOfMemoryError"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressRewriter"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AllowRedefinitionToAddDeleteMethods"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceBytecodes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceICs"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceInvocationCounterOverflow"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceInlineCacheClearing"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceDependencies"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyDependencies"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceNewOopMapGeneration"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceNewOopMapGenerationDetailed"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TimeOopMap"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TimeOopMap2"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOopMapRewrites"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceICBuffer"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceCompiledIC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "FLSVerifyDictionary"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceFinalizerRegistration"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "IgnoreEmptyClassPaths"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintHeapAtSIGBREAK"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintClassHistogram"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDynamicNumberOfCompilerThreads"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InjectCompilerCreationFailure"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "GenerateSynchronizationCode"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "GenerateRangeChecks"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TrapBasedNullChecks"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseNotificationThread"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "Inline"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ClipInlining"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCHA"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseTypeProfile"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UsePopCountInstruction"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EagerInitialization"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceMethodReplacement"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintMethodFlushing"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCodeAging"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StressCodeBuffers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintVMOptions"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "IgnoreUnrecognizedVMOptions"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintCommandLineFlags"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFlagsInitial"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFlagsFinal"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFlagsWithComments"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintFlagsRanges"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExtensiveErrorReports"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DisplayVMOutputToStderr"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DisplayVMOutputToStdout"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ErrorFileToStderr"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ErrorFileToStdout"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseHeavyMonitors"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintStringTableStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintSymbolTableSizeHistogram"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DebugVtables"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintVtableStats"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceCreateZombies"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RangeCheckElimination"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UncommonNullCast"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TypeProfileCasts"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLivenessGen"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceLivenessQuery"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CollectIndexSetStatistics"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CompactStrings"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CountCompiledCalls"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ICMissHistogram"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RewriteBytecodes"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RewriteFrequentPairs"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseInterpreter"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseFastSignatureHandlers"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseLoopCounter"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseOnStackReplacement"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOnStackReplacement"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PreferInterpreterNativeStubs"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CountBytecodes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintBytecodeHistogram"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintBytecodePairHistogram"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyOops"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CheckUnhandledOops"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyJNIFields"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyJNIEnvThread"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyFPU"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyThread"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyActivationFrameSize"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceFrequencyInlining"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "InlineIntrinsics"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ProfileInterpreter"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ProfileTraps"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyDataPointer"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "CrashGCForDumpingJavaThread"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCompiler"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCounterDecay"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysCompileLoopMethods"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceDeoptimization"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintDeoptimizationDetails"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DebugDeoptimization"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "LogSweeper"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ShrinkHeapInSteps"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RestrictReservedStack"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "SegmentedCodeCache"
  value = true
  origin = "Ergonomic"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExitOnFullCodeCache"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseCodeCacheFlushing"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseThreadPriorities"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ThreadPriorityVerbose"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TieredCompilation"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDebuggerErgo"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDebuggerErgo1"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDebuggerErgo2"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EnableJVMTIStackDepthAsserts"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UsePerfData"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PerfDataSaveToFile"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PerfDisableSharedMem"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PerfAllowAtExitRegistration"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PerfBypassFileSystemCheck"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ManagementServer"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DisableAttachMechanism"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "StartAttachListener"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "EnableDynamicAgentLoading"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintConcurrentLocks"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSharedSpaces"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifySharedSpaces"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RequireSharedSpaces"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DumpSharedSpaces"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DynamicDumpSharedSpaces"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RecordDynamicDumpInfo"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintSharedArchiveAndExit"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PrintSharedDictionary"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExtendedDTraceProbes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DTraceMethodProbes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DTraceAllocProbes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "DTraceMonitorProbes"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "RelaxAccessControlCheck"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseStringDeduplication"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PreserveFramePointer"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceMemoryWriteback"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "FlightRecorder"
  value = true
  origin = "Management"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseEmptySlotsInSupers"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "VerifyCrossModifyFence"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "TraceOptimizedUpcallStubs"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseOSErrorReporting"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1UseAdaptiveIHOP"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1UseAdaptiveConcRefinement"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1VerifyCTCleanup"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1ExitOnExpansionFailure"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotDuringConcMark"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotDuringConcurrentStart"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotDuringYoungGC"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1EvacuationFailureALotDuringMixedGC"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1VerifyBitmaps"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "G1PeriodicGCInvokesConcurrent"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseMaximumCompactionOnSystemGC"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PSChunkLargeArrays"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ShenandoahVerifyOptoBarriers"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZProactive"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ZUncommit"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseSerialGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseG1GC"
  value = true
  origin = "Ergonomic"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseParallelGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseZGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseShenandoahGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseDynamicNumberOfGCThreads"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysTenure"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "NeverTenure"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ScavengeBeforeFullGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ExplicitGCInvokesConcurrent"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ResizePLAB"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysPreTouch"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ParallelRefProcEnabled"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ParallelRefProcBalancingEnabled"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "ScavengeALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "FullGCALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "GCALotAtAllSafepoints"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "PromotionFailureALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "MetadataAllocationFailALot"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "NeverActAsServerClassMachine"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AlwaysActAsServerClassMachine"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "AggressiveHeap"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveSizePolicy"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UsePSAdaptiveSurvivorSizePolicy"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveGenerationSizePolicyAtMinorCollection"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveGenerationSizePolicyAtMajorCollection"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveSizePolicyWithSystemGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.923
  name = "UseAdaptiveSizePolicyFootprintGoal"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "UseAdaptiveSizeDecayMajorGCCost"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "UseGCOverheadLimit"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "UseCondCardMark"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "DisableExplicitGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "PrintGC"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "PrintGCDetails"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "UseTLAB"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "ResizeTLAB"
  value = true
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "ZeroTLAB"
  value = false
  origin = "Default"
}

jdk.BooleanFlag {
  startTime = 17:41:13.924
  name = "TLABStats"
  value = true
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "PrintIdealGraphAddress"
  value = "127.0.0.1"
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "PrintIdealGraphFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "CompilationMode"
  value = "default"
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "CompileOnly"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "CompileCommandFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "CompileCommand"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ReplayDataFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "InlineDataFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "DeoptimizeOnlyAt"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "OnError"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "OnOutOfMemoryError"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "HeapDumpPath"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "NativeMemoryTracking"
  value = "off"
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "TraceJVMTI"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ErrorFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "SuppressErrorAt"
  value = ""
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "MetaspaceReclaimPolicy"
  value = "balanced"
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "PerfDataSaveFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "SharedArchiveConfigFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "DumpLoadedClassList"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "SharedClassListFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "SharedArchiveFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ArchiveClassesAtExit"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ExtraSharedClassListFile"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "AllocateHeapAt"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "FlightRecorderOptions"
  value = N/A
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "StartFlightRecording"
  value = "duration=30s,filename=flight.jfr"
  origin = "Command line"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ShenandoahGCMode"
  value = "satb"
  origin = "Default"
}

jdk.StringFlag {
  startTime = 17:41:13.924
  name = "ShenandoahGCHeuristics"
  value = "adaptive"
  origin = "Default"
}

jdk.GCConfiguration {
  startTime = 17:41:13.924
  youngCollector = "G1New"
  oldCollector = "G1Old"
  parallelGCThreads = 8
  concurrentGCThreads = 2
  usesDynamicGCThreads = true
  isExplicitGCConcurrent = false
  isExplicitGCDisabled = false
  pauseTarget = N/A
  gcTimeRatio = 12
}

jdk.GCSurvivorConfiguration {
  startTime = 17:41:13.924
  maxTenuringThreshold = 15
  initialTenuringThreshold = 7
}

jdk.GCTLABConfiguration {
  startTime = 17:41:13.924
  usesTLABs = true
  minTLABSize = 2.0 kB
  tlabRefillWasteLimit = 64 bytes
}

jdk.GCHeapConfiguration {
  startTime = 17:41:13.924
  minSize = 8.0 MB
  maxSize = 4.0 GB
  initialSize = 256.0 MB
  usesCompressedOops = true
  compressedOopsMode = "Zero based"
  objectAlignment = 8 bytes
  heapAddressBits = 32
}

jdk.YoungGenerationConfiguration {
  startTime = 17:41:13.924
  minSize = 1.3 MB
  maxSize = 2.4 GB
  newRatio = 2
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "jdk.jar.disabledAlgorithms"
  value = "MD2, MD5, RSA keySize < 1024, DSA keySize < 1024, SHA1 denyAfter 2019-01-01"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "security.provider.13"
  value = "SunPKCS11"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "security.provider.12"
  value = "SunMSCAPI"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "policy.provider"
  value = "sun.security.provider.PolicyFile"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "policy.url.1"
  value = "file:${java.home}/conf/security/java.policy"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "jdk.security.legacyAlgorithms"
  value = "SHA1, RSA keySize < 2048, DSA keySize < 2048"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "securerandom.source"
  value = "file:/dev/random"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "policy.url.2"
  value = "file:${user.home}/.java.policy"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "crypto.policy"
  value = "unlimited"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.925
  key = "jceks.key.serialFilter"
  value = "java.base/java.lang.Enum;java.base/java.security.KeyRep;java.base/java.security.KeyRep$Type;java.base/javax.crypto.spec.SecretKeySpec;!*"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ObjectAllocationSample {
  startTime = 17:41:13.926
  objectClass = java.util.concurrent.ConcurrentHashMap$Node[] (classLoader = bootstrap)
  weight = 19.0 MB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.util.concurrent.ConcurrentHashMap.initTable() line: 2301
    java.util.concurrent.ConcurrentHashMap.putVal(Object, Object, boolean) line: 1017
    java.util.concurrent.ConcurrentHashMap.put(Object, Object) line: 1006
    jdk.jfr.internal.StringPool$SimpleStringIdPool.storeString(String) line: 92
    jdk.jfr.internal.StringPool$SimpleStringIdPool.addString(String) line: 86
    ...
  ]
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.certpath.disabledAlgorithms"
  value = "MD2, MD5, SHA1 jdkCA & usage TLSServer, RSA keySize < 1024, DSA keySize < 1024, EC keySize < 224, SHA1 usage SignedJAR & denyAfter 2019-01-01"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.tls.disabledAlgorithms"
  value = "SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, DH keySize < 1024, EC keySize < 224, 3DES_EDE_CBC, anon, NULL"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "policy.ignoreIdentityScope"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "login.configuration.provider"
  value = "sun.security.provider.ConfigFile"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "keystore.type.compat"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.overridePropertiesFile"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.tls.legacyAlgorithms"
  value = "NULL, anon, RC4, DES, 3DES_EDE_CBC"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.11"
  value = "JdkSASL"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.10"
  value = "JdkLDAP"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.7"
  value = "SunSASL"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.sasl.disabledMechanisms"
  value = ""
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.8"
  value = "XMLDSig"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.9"
  value = "SunPCSC"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.security.caDistrustPolicies"
  value = "SYMANTEC_TLS"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "sun.security.krb5.maxReferrals"
  value = "5"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.1"
  value = "SUN"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.tls.keyLimits"
  value = "AES/GCM/NoPadding KeyUpdate 2^37, ChaCha20-Poly1305 KeyUpdate 2^37"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.2"
  value = "SunRsaSign"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.3"
  value = "SunEC"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.4"
  value = "SunJSSE"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "networkaddress.cache.negative.ttl"
  value = "10"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.tls.alpnCharset"
  value = "ISO_8859_1"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.5"
  value = "SunJCE"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "security.provider.6"
  value = "SunJGSS"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.xml.dsig.secureValidationPolicy"
  value = "disallowAlg http://www.w3.org/TR/1999/REC-xslt-19991116,disallowAlg http://www.w3.org/2001/04/xmldsig-more#rsa-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#hmac-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#md5,disallowAlg http://www.w3.org/2000/09/xmldsig#sha1,disallowAlg http://www.w3.org/2000/09/xmldsig#dsa-sha1,disallowAlg http://www.w3.org/2000/09/xmldsig#rsa-sha1,disallowAlg http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1,disallowAlg http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1,maxTransforms 5,maxReferences 30,disallowReferenceUriSchemes file http https,minKeySize RSA 1024,minKeySize DSA 1024,minKeySize EC 224,noDuplicateIds,noRetrievalMethodLoops"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "ssl.KeyManagerFactory.algorithm"
  value = "SunX509"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "securerandom.drbg.config"
  value = ""
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "sun.security.krb5.disableReferrals"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "ssl.TrustManagerFactory.algorithm"
  value = "PKIX"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "keystore.type"
  value = "pkcs12"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "policy.allowSystemProperty"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "jdk.io.permissionsUseCanonicalPath"
  value = "false"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "securerandom.strongAlgorithms"
  value = "Windows-PRNG:SunMSCAPI,DRBG:SUN"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "policy.expandProperties"
  value = "true"
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "package.access"
  value = "sun.misc.,sun.reflect."
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "package.definition"
  value = "sun.misc.,sun.reflect."
  eventThread = "main" (javaThreadId = 1)
}

jdk.InitialSecurityProperty {
  startTime = 17:41:13.926
  key = "krb5.kdc.bad.policy"
  value = "tryLast"
  eventThread = "main" (javaThreadId = 1)
}

jdk.NativeMethodSample {
  startTime = 17:41:13.930
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ThreadStart {
  startTime = 17:41:13.930
  thread = "JFR Recording Scheduler" (javaThreadId = 19)
  parentThread = "Permissionless thread" (javaThreadId = 18)
  eventThread = "JFR Recording Scheduler" (javaThreadId = 19)
}

jdk.ThreadStart {
  startTime = 17:41:13.938
  thread = "Notification Thread" (javaThreadId = 20)
  parentThread = "main" (javaThreadId = 1)
  eventThread = "Notification Thread" (javaThreadId = 20)
  stackTrace = [
  ]
}

jdk.ThreadStart {
  startTime = 17:41:13.939
  thread = "main" (javaThreadId = 1)
  parentThread = N/A
  eventThread = "main" (javaThreadId = 1)
}

jdk.Deoptimization {
  startTime = 17:41:13.939
  compileId = 1021
  compiler = "c2"
  method = java.lang.String.isLatin1()
  lineNumber = 4553
  bci = 10
  instruction = "ifne"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "main" (javaThreadId = 1)
}

jdk.Deoptimization {
  startTime = 17:41:13.939
  compileId = 1024
  compiler = "c2"
  method = java.lang.String.isLatin1()
  lineNumber = 4553
  bci = 10
  instruction = "ifne"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ObjectAllocationSample {
  startTime = 17:41:13.940
  objectClass = java.lang.Class (classLoader = bootstrap)
  weight = 243.1 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    sun.reflect.generics.parser.SignatureParser.parseSuperInterfaces() line: 546
    sun.reflect.generics.parser.SignatureParser.parseClassSignature() line: 214
    sun.reflect.generics.parser.SignatureParser.parseClassSig(String) line: 156
    sun.reflect.generics.repository.ClassRepository.parse(String) line: 57
    sun.reflect.generics.repository.ClassRepository.parse(String) line: 41
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:13.953
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.GCHeapSummary {
  startTime = 17:41:13.955
  gcId = 0
  when = "Before GC"
  heapSpace = {
    start = 0x701400000
    committedEnd = 0x711400000
    committedSize = 256.0 MB
    reservedEnd = 0x800000000
    reservedSize = 4.0 GB
  }
  heapUsed = 22.0 MB
}

jdk.G1HeapSummary {
  startTime = 17:41:13.955
  gcId = 0
  when = "Before GC"
  edenUsedSize = 22.0 MB
  edenTotalSize = 22.0 MB
  survivorUsedSize = 0 bytes
  numberOfRegions = 128
}

jdk.MetaspaceSummary {
  startTime = 17:41:13.955
  gcId = 0
  when = "Before GC"
  gcThreshold = 21.0 MB
  metaspace = {
    committed = 5.1 MB
    used = 4.9 MB
    reserved = 1.1 GB
  }
  dataSpace = {
    committed = 4.5 MB
    used = 4.4 MB
    reserved = 64.0 MB
  }
  classSpace = {
    committed = 640.0 kB
    used = 514.8 kB
    reserved = 1.0 GB
  }
}

jdk.MetaspaceChunkFreeListSummary {
  startTime = 17:41:13.955
  gcId = 0
  when = "Before GC"
  metadataType = "Metadata"
  specializedChunks = 0
  specializedChunksTotalSize = 0 bytes
  smallChunks = 0
  smallChunksTotalSize = 0 bytes
  mediumChunks = 0
  mediumChunksTotalSize = 0 bytes
  humongousChunks = 0
  humongousChunksTotalSize = 0 bytes
}

jdk.MetaspaceChunkFreeListSummary {
  startTime = 17:41:13.955
  gcId = 0
  when = "Before GC"
  metadataType = "Class"
  specializedChunks = 0
  specializedChunksTotalSize = 0 bytes
  smallChunks = 0
  smallChunksTotalSize = 0 bytes
  mediumChunks = 0
  mediumChunksTotalSize = 0 bytes
  humongousChunks = 0
  humongousChunksTotalSize = 0 bytes
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00877 ms
  gcId = 0
  gcWorkerId = 3
  name = "MergeRS"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00874 ms
  gcId = 0
  gcWorkerId = 0
  name = "MergeRS"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00748 ms
  gcId = 0
  gcWorkerId = 1
  name = "MergeRS"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00783 ms
  gcId = 0
  gcWorkerId = 2
  name = "MergeRS"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00242 ms
  gcId = 0
  gcWorkerId = 3
  name = "MergeHCC"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00270 ms
  gcId = 0
  gcWorkerId = 1
  name = "MergeHCC"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.00198 ms
  gcId = 0
  gcWorkerId = 2
  name = "MergeHCC"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000386 ms
  gcId = 0
  gcWorkerId = 3
  name = "MergeLB"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000543 ms
  gcId = 0
  gcWorkerId = 1
  name = "MergeLB"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000534 ms
  gcId = 0
  gcWorkerId = 2
  name = "MergeLB"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000507 ms
  gcId = 0
  gcWorkerId = 4
  name = "MergeRS"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000221 ms
  gcId = 0
  gcWorkerId = 4
  name = "MergeHCC"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000595 ms
  gcId = 0
  gcWorkerId = 5
  name = "MergeRS"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000212 ms
  gcId = 0
  gcWorkerId = 4
  name = "MergeLB"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000258 ms
  gcId = 0
  gcWorkerId = 5
  name = "MergeHCC"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.955
  duration = 0.000208 ms
  gcId = 0
  gcWorkerId = 5
  name = "MergeLB"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000957 ms
  gcId = 0
  gcWorkerId = 0
  name = "MergeHCC"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000300 ms
  gcId = 0
  gcWorkerId = 0
  name = "MergeLB"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.178 ms
  gcId = 0
  gcWorkerId = 1
  name = "ThreadRoots"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.151 ms
  gcId = 0
  gcWorkerId = 4
  name = "ThreadRoots"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000224 ms
  gcId = 0
  gcWorkerId = 4
  name = "CLDGRoots"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.590 ms
  gcId = 0
  gcWorkerId = 2
  name = "ThreadRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000308 ms
  gcId = 0
  gcWorkerId = 2
  name = "CLDGRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.00120 ms
  gcId = 0
  gcWorkerId = 2
  name = "VM Global"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.00750 ms
  gcId = 0
  gcWorkerId = 2
  name = "Thread OopStorage"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000160 ms
  gcId = 0
  gcWorkerId = 2
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000147 ms
  gcId = 0
  gcWorkerId = 2
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.126 ms
  gcId = 0
  gcWorkerId = 2
  name = "JNI Global"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000852 ms
  gcId = 0
  gcWorkerId = 2
  name = "CMRefRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.730 ms
  gcId = 0
  gcWorkerId = 2
  name = "ExtRootScan"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000766 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.000088 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.0235 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.0249 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.740 ms
  gcId = 0
  gcWorkerId = 4
  name = "VM Global"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000205 ms
  gcId = 0
  gcWorkerId = 4
  name = "Thread OopStorage"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000125 ms
  gcId = 0
  gcWorkerId = 4
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000108 ms
  gcId = 0
  gcWorkerId = 4
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000130 ms
  gcId = 0
  gcWorkerId = 4
  name = "JNI Global"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000255 ms
  gcId = 0
  gcWorkerId = 4
  name = "CMRefRoots"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.901 ms
  gcId = 0
  gcWorkerId = 4
  name = "ExtRootScan"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 1.51 ms
  gcId = 0
  gcWorkerId = 0
  name = "ThreadRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000466 ms
  gcId = 0
  gcWorkerId = 0
  name = "CLDGRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000640 ms
  gcId = 0
  gcWorkerId = 0
  name = "VM Global"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000116 ms
  gcId = 0
  gcWorkerId = 0
  name = "Thread OopStorage"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000186 ms
  gcId = 0
  gcWorkerId = 0
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000128 ms
  gcId = 0
  gcWorkerId = 0
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000128 ms
  gcId = 0
  gcWorkerId = 0
  name = "JNI Global"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000149 ms
  gcId = 0
  gcWorkerId = 0
  name = "CMRefRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 1.52 ms
  gcId = 0
  gcWorkerId = 0
  name = "ExtRootScan"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000348 ms
  gcId = 0
  gcWorkerId = 0
  name = "CodeRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.0151 ms
  gcId = 0
  gcWorkerId = 0
  name = "CodeRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.0114 ms
  gcId = 0
  gcWorkerId = 0
  name = "CodeRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 0.824 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.0977 ms
  gcId = 0
  gcWorkerId = 0
  name = "CodeRoots"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 1.77 ms
  gcId = 0
  gcWorkerId = 3
  name = "ThreadRoots"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000255 ms
  gcId = 0
  gcWorkerId = 3
  name = "CLDGRoots"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000247 ms
  gcId = 0
  gcWorkerId = 3
  name = "VM Global"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000138 ms
  gcId = 0
  gcWorkerId = 3
  name = "Thread OopStorage"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000135 ms
  gcId = 0
  gcWorkerId = 3
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000130 ms
  gcId = 0
  gcWorkerId = 3
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000128 ms
  gcId = 0
  gcWorkerId = 3
  name = "JNI Global"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.000141 ms
  gcId = 0
  gcWorkerId = 3
  name = "CMRefRoots"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 1.78 ms
  gcId = 0
  gcWorkerId = 3
  name = "ExtRootScan"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.122 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.462 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 0.711 ms
  gcId = 0
  gcWorkerId = 2
  name = "CodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.0317 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.957
  duration = 1.48 ms
  gcId = 0
  gcWorkerId = 4
  name = "CodeRoots"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.00600 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.219 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.602 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.00208 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.00251 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.736 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000901 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.740 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000961 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 0.855 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000736 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.958
  duration = 1.21 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000948 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0649 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000433 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000867 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000197 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0744 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000337 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0636 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000313 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0372 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000284 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.119 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000400 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00432 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000335 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0580 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00341 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0211 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00106 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00147 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00180 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00175 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000333 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00609 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000302 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0288 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000273 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0240 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000401 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0911 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000365 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00179 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0354 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000175 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000350 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00456 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000820 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000801 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00178 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0137 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0117 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0227 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00358 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000334 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0290 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0499 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000493 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0298 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000372 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0364 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0382 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000430 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000374 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00588 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000394 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0210 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000284 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000931 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000253 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00944 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000205 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00506 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000236 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00105 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000191 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0209 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000281 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0468 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000355 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0569 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000374 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000921 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000198 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0488 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0211 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0162 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00553 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00352 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00325 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00324 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00435 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0264 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000354 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00104 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000246 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0297 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000217 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0682 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000407 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.103 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000483 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.115 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000208 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0180 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000448 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00443 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0198 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0954 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00110 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00131 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000768 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0103 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000337 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00160 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000238 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00276 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000402 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00418 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000262 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00875 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00624 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00519 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00135 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00118 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00162 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 3.56 ms
  gcId = 0
  gcWorkerId = 1
  name = "CLDGRoots"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000816 ms
  gcId = 0
  gcWorkerId = 4
  name = "ObjCopy"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000722 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00493 ms
  gcId = 0
  gcWorkerId = 2
  name = "ObjCopy"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00137 ms
  gcId = 0
  gcWorkerId = 3
  name = "ObjCopy"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000477 ms
  gcId = 0
  gcWorkerId = 1
  name = "VM Global"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000148 ms
  gcId = 0
  gcWorkerId = 1
  name = "Thread OopStorage"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000134 ms
  gcId = 0
  gcWorkerId = 1
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000115 ms
  gcId = 0
  gcWorkerId = 1
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000105 ms
  gcId = 0
  gcWorkerId = 1
  name = "JNI Global"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000244 ms
  gcId = 0
  gcWorkerId = 1
  name = "CMRefRoots"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.956
  duration = 3.75 ms
  gcId = 0
  gcWorkerId = 1
  name = "ExtRootScan"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000135 ms
  gcId = 0
  gcWorkerId = 1
  name = "ObjCopy"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000891 ms
  gcId = 0
  gcWorkerId = 1
  name = "ObjCopy"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00115 ms
  gcId = 0
  gcWorkerId = 5
  name = "ThreadRoots"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000261 ms
  gcId = 0
  gcWorkerId = 5
  name = "CLDGRoots"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000290 ms
  gcId = 0
  gcWorkerId = 5
  name = "VM Global"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000130 ms
  gcId = 0
  gcWorkerId = 5
  name = "Thread OopStorage"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000127 ms
  gcId = 0
  gcWorkerId = 5
  name = "ThreadService OopStorage"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000133 ms
  gcId = 0
  gcWorkerId = 5
  name = "JVMTI OopStorage"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000132 ms
  gcId = 0
  gcWorkerId = 5
  name = "JNI Global"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000154 ms
  gcId = 0
  gcWorkerId = 5
  name = "CMRefRoots"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.00722 ms
  gcId = 0
  gcWorkerId = 5
  name = "ExtRootScan"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000145 ms
  gcId = 0
  gcWorkerId = 5
  name = "ObjCopy"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.000737 ms
  gcId = 0
  gcWorkerId = 5
  name = "ObjCopy"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.108 ms
  gcId = 0
  gcWorkerId = 1
  name = "Termination"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.121 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.0225 ms
  gcId = 0
  gcWorkerId = 5
  name = "Termination"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.126 ms
  gcId = 0
  gcWorkerId = 3
  name = "Termination"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.127 ms
  gcId = 0
  gcWorkerId = 2
  name = "Termination"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.959
  duration = 0.129 ms
  gcId = 0
  gcWorkerId = 4
  name = "Termination"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhasePauseLevel1 {
  startTime = 17:41:13.960
  duration = 0.000752 ms
  gcId = 0
  name = "Reconsider SoftReferences"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000643 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000904 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000097 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00789 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000491 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000098 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000335 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000560 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000091 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000054 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000597 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000081 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000043 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000481 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000112 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000072 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000467 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000088 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000048 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000620 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000089 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000027 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000623 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000080 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhasePauseLevel2 {
  startTime = 17:41:13.960
  duration = 0.0808 ms
  gcId = 0
  name = "Notify Soft/WeakReferences"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhasePauseLevel1 {
  startTime = 17:41:13.960
  duration = 0.0910 ms
  gcId = 0
  name = "Notify Soft/WeakReferences"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhasePauseLevel1 {
  startTime = 17:41:13.960
  duration = 0.000205 ms
  gcId = 0
  name = "Notify and keep alive finalizable"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000052 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000631 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000082 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000035 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000621 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000086 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000035 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000551 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000102 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000040 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000861 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000137 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000706 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000802 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000104 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000035 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000847 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000082 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000036 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000698 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000077 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000038 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000589 ms
  gcId = 0
  gcWorkerId = 0
  name = "ObjCopy"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000078 ms
  gcId = 0
  gcWorkerId = 0
  name = "Termination"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhasePauseLevel2 {
  startTime = 17:41:13.960
  duration = 0.0280 ms
  gcId = 0
  name = "Notify PhantomReferences"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCPhasePauseLevel1 {
  startTime = 17:41:13.960
  duration = 0.0348 ms
  gcId = 0
  name = "Notify PhantomReferences"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GCReferenceStatistics {
  startTime = 17:41:13.960
  gcId = 0
  type = "Soft reference"
  count = 0
}

jdk.GCReferenceStatistics {
  startTime = 17:41:13.960
  gcId = 0
  type = "Weak reference"
  count = 436
}

jdk.GCReferenceStatistics {
  startTime = 17:41:13.960
  gcId = 0
  type = "Final reference"
  count = 0
}

jdk.GCReferenceStatistics {
  startTime = 17:41:13.960
  gcId = 0
  type = "Phantom reference"
  count = 119
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00102 ms
  gcId = 0
  gcWorkerId = 1
  name = "RecalculateUsed"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000986 ms
  gcId = 0
  gcWorkerId = 2
  name = "ClearLoggedCards"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00490 ms
  gcId = 0
  gcWorkerId = 1
  name = "ClearLoggedCards"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0210 ms
  gcId = 0
  gcWorkerId = 0
  name = "MergePSS"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000267 ms
  gcId = 0
  gcWorkerId = 0
  name = "ClearLoggedCards"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00135 ms
  gcId = 0
  gcWorkerId = 0
  name = "ResetHotCardCache"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000541 ms
  gcId = 0
  gcWorkerId = 0
  name = "RedirtyCards"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00184 ms
  gcId = 0
  gcWorkerId = 2
  name = "UpdateDerivedPointers"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000369 ms
  gcId = 0
  gcWorkerId = 2
  name = "RedirtyCards"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000636 ms
  gcId = 0
  gcWorkerId = 4
  name = "RedirtyCards"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00136 ms
  gcId = 0
  gcWorkerId = 3
  name = "RedirtyCards"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000682 ms
  gcId = 0
  gcWorkerId = 5
  name = "RedirtyCards"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00304 ms
  gcId = 0
  gcWorkerId = 2
  name = "YoungFreeCSet"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00318 ms
  gcId = 0
  gcWorkerId = 0
  name = "YoungFreeCSet"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000822 ms
  gcId = 0
  gcWorkerId = 2
  name = "YoungFreeCSet"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00448 ms
  gcId = 0
  gcWorkerId = 3
  name = "YoungFreeCSet"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00474 ms
  gcId = 0
  gcWorkerId = 0
  name = "YoungFreeCSet"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00589 ms
  gcId = 0
  gcWorkerId = 2
  name = "YoungFreeCSet"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00180 ms
  gcId = 0
  gcWorkerId = 0
  name = "YoungFreeCSet"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0119 ms
  gcId = 0
  gcWorkerId = 0
  name = "FreeCSet"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0168 ms
  gcId = 0
  gcWorkerId = 4
  name = "YoungFreeCSet"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0165 ms
  gcId = 0
  gcWorkerId = 5
  name = "YoungFreeCSet"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0180 ms
  gcId = 0
  gcWorkerId = 4
  name = "FreeCSet"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0174 ms
  gcId = 0
  gcWorkerId = 5
  name = "FreeCSet"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0140 ms
  gcId = 0
  gcWorkerId = 3
  name = "YoungFreeCSet"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0197 ms
  gcId = 0
  gcWorkerId = 3
  name = "FreeCSet"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0348 ms
  gcId = 0
  gcWorkerId = 1
  name = "PurgeCodeRoots"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000212 ms
  gcId = 0
  gcWorkerId = 1
  name = "RedirtyCards"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000452 ms
  gcId = 0
  gcWorkerId = 1
  name = "FreeCSet"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0478 ms
  gcId = 0
  gcWorkerId = 2
  name = "YoungFreeCSet"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.0597 ms
  gcId = 0
  gcWorkerId = 2
  name = "FreeCSet"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000960 ms
  gcId = 0
  gcWorkerId = 2
  name = "RebuildFreeList"
  eventThread = "GC Thread#3" (osThreadId = 19612)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00302 ms
  gcId = 0
  gcWorkerId = 1
  name = "RebuildFreeList"
  eventThread = "GC Thread#1" (osThreadId = 19396)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00159 ms
  gcId = 0
  gcWorkerId = 3
  name = "RebuildFreeList"
  eventThread = "GC Thread#2" (osThreadId = 22832)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.000903 ms
  gcId = 0
  gcWorkerId = 4
  name = "RebuildFreeList"
  eventThread = "GC Thread#5" (osThreadId = 17828)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00517 ms
  gcId = 0
  gcWorkerId = 0
  name = "RebuildFreeList"
  eventThread = "GC Thread#4" (osThreadId = 14188)
}

jdk.GCPhaseParallel {
  startTime = 17:41:13.960
  duration = 0.00105 ms
  gcId = 0
  gcWorkerId = 5
  name = "RebuildFreeList"
  eventThread = "GC Thread#0" (osThreadId = 23148)
}

jdk.G1EvacuationYoungStatistics {
  startTime = 17:41:13.960
  statistics = {
    gcId = 0
    allocated = 2.6 MB
    wasted = 5.5 kB
    used = 2.5 MB
    undoWaste = 0 bytes
    regionEndWaste = 0 bytes
    regionsRefilled = 2
    directAllocated = 531.3 kB
    failureUsed = 0 bytes
    failureWaste = 0 bytes
  }
}

jdk.G1EvacuationOldStatistics {
  startTime = 17:41:13.960
  statistics = {
    gcId = 0
    allocated = 0 bytes
    wasted = 0 bytes
    used = 0 bytes
    undoWaste = 0 bytes
    regionEndWaste = 0 bytes
    regionsRefilled = 0
    directAllocated = 0 bytes
    failureUsed = 0 bytes
    failureWaste = 0 bytes
  }
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 1
  size = 3.0 MB
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 2
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 3
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 4
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 5
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 6
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 7
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 8
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 9
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 10
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 11
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 12
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 13
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 14
  size = 0 bytes
}

jdk.TenuringDistribution {
  startTime = 17:41:13.960
  gcId = 0
  age = 15
  size = 0 bytes
}

jdk.G1MMU {
  startTime = 17:41:13.960
  gcId = 0
  timeSlice = 201 ms
  gcTime = 4.00 ms
  pauseTarget = 200 ms
}

jdk.G1BasicIHOP {
  startTime = 17:41:13.960
  gcId = 0
  threshold = 115.2 MB
  thresholdPercentage = 45.00%
  targetOccupancy = 256.0 MB
  currentOccupancy = 3.2 MB
  recentMutatorAllocationSize = 0 bytes
  recentMutatorDuration = 772 ms
  recentAllocationRate = 0 byte/s
  lastMarkingDuration = 0 s
}

jdk.G1AdaptiveIHOP {
  startTime = 17:41:13.960
  gcId = 0
  threshold = 115.2 MB
  thresholdPercentage = 47.37%
  ihopTargetOccupancy = 243.2 MB
  currentOccupancy = 3.2 MB
  additionalBufferSize = 38.0 MB
  predictedAllocationRate = 0 byte/s
  predictedMarkingDuration = 0 s
  predictionActive = false
}

jdk.GCHeapSummary {
  startTime = 17:41:13.960
  gcId = 0
  when = "After GC"
  heapSpace = {
    start = 0x701400000
    committedEnd = 0x711400000
    committedSize = 256.0 MB
    reservedEnd = 0x800000000
    reservedSize = 4.0 GB
  }
  heapUsed = 3.2 MB
}

jdk.G1HeapSummary {
  startTime = 17:41:13.960
  gcId = 0
  when = "After GC"
  edenUsedSize = 0 bytes
  edenTotalSize = 34.8 MB
  survivorUsedSize = 3.2 MB
  numberOfRegions = 128
}

jdk.MetaspaceSummary {
  startTime = 17:41:13.960
  gcId = 0
  when = "After GC"
  gcThreshold = 21.0 MB
  metaspace = {
    committed = 5.1 MB
    used = 4.9 MB
    reserved = 1.1 GB
  }
  dataSpace = {
    committed = 4.5 MB
    used = 4.4 MB
    reserved = 64.0 MB
  }
  classSpace = {
    committed = 640.0 kB
    used = 514.8 kB
    reserved = 1.0 GB
  }
}

jdk.MetaspaceChunkFreeListSummary {
  startTime = 17:41:13.960
  gcId = 0
  when = "After GC"
  metadataType = "Metadata"
  specializedChunks = 0
  specializedChunksTotalSize = 0 bytes
  smallChunks = 0
  smallChunksTotalSize = 0 bytes
  mediumChunks = 0
  mediumChunksTotalSize = 0 bytes
  humongousChunks = 0
  humongousChunksTotalSize = 0 bytes
}

jdk.MetaspaceChunkFreeListSummary {
  startTime = 17:41:13.960
  gcId = 0
  when = "After GC"
  metadataType = "Class"
  specializedChunks = 0
  specializedChunksTotalSize = 0 bytes
  smallChunks = 0
  smallChunksTotalSize = 0 bytes
  mediumChunks = 0
  mediumChunksTotalSize = 0 bytes
  humongousChunks = 0
  humongousChunksTotalSize = 0 bytes
}

jdk.EvacuationInformation {
  startTime = 17:41:13.960
  gcId = 0
  cSetRegions = 11
  cSetUsedBefore = 22.0 MB
  cSetUsedAfter = 0 bytes
  allocationRegions = 2
  allocationRegionsUsedBefore = 0 bytes
  allocationRegionsUsedAfter = 3.2 MB
  bytesCopied = 3.2 MB
  regionsFreed = 11
}

jdk.GCPhasePause {
  startTime = 17:41:13.955
  duration = 5.24 ms
  gcId = 0
  name = "GC Pause"
  eventThread = "VM Thread" (osThreadId = 4384)
}

jdk.GarbageCollection {
  startTime = 17:41:13.955
  duration = 5.24 ms
  gcId = 0
  name = "G1New"
  cause = "G1 Evacuation Pause"
  sumOfPauses = 5.24 ms
  longestPause = 5.24 ms
}

jdk.YoungGarbageCollection {
  startTime = 17:41:13.955
  duration = 5.24 ms
  gcId = 0
  tenuringThreshold = 15
}

jdk.G1GarbageCollection {
  startTime = 17:41:13.955
  duration = 5.24 ms
  gcId = 0
  type = "Normal"
}

jdk.ObjectAllocationSample {
  startTime = 17:41:13.960
  objectClass = java.lang.StringBuilder (classLoader = bootstrap)
  weight = 119.3 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.invoke.BoundMethodHandle$Specializer$Factory.chooseFieldName(Class, int) line: 456
    java.lang.invoke.ClassSpecializer$Factory.findGetter(Class, List, int) line: 885
    java.lang.invoke.ClassSpecializer$Factory.findGetters(Class, List) line: 896
    java.lang.invoke.ClassSpecializer$Factory.linkSpeciesDataToCode(ClassSpecializer$SpeciesData, Class) line: 924
    java.lang.invoke.ClassSpecializer$Factory.loadSpecies(ClassSpecializer$SpeciesData) line: 486
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:13.960
  objectClass = byte[] (classLoader = bootstrap)
  weight = 450.1 kB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.util.Arrays.copyOf(byte[], int) line: 3537
    java.lang.AbstractStringBuilder.ensureCapacityInternal(int) line: 228
    java.lang.AbstractStringBuilder.append(String) line: 582
    java.lang.StringBuilder.append(String) line: 179
    java.net.URLStreamHandler.parseURL(URL, String, int, int) line: 271
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:13.961
  objectClass = byte[] (classLoader = bootstrap)
  weight = 1.4 kB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.util.Arrays.copyOfRange(byte[], int, int) line: 3822
    java.lang.StringLatin1.newString(byte[], int, int) line: 769
    java.lang.String.substring(int, int) line: 2714
    jdk.internal.util.jar.JarIndex.get(String) line: 160
    jdk.internal.loader.URLClassPath$JarLoader.getResource(String, boolean, Set) line: 983
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:13.976
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.Deoptimization {
  startTime = 17:41:13.979
  compileId = 1146
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 570
  bci = 63
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.Deoptimization {
  startTime = 17:41:13.981
  compileId = 1146
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 570
  bci = 63
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.Deoptimization {
  startTime = 17:41:13.982
  compileId = 1146
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 570
  bci = 63
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.Deoptimization {
  startTime = 17:41:13.983
  compileId = 1146
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 570
  bci = 63
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.NativeMethodSample {
  startTime = 17:41:14.000
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.007
  objectClass = java.util.HashMap$Node[] (classLoader = bootstrap)
  weight = 351.4 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.util.HashMap.resize() line: 702
    java.util.HashMap.computeIfAbsent(Object, Function) line: 1198
    java.lang.reflect.ProxyGenerator.addProxyMethod(ProxyGenerator$ProxyMethod) line: 558
    java.lang.reflect.ProxyGenerator.generateClassFile() line: 468
    java.lang.reflect.ProxyGenerator.generateProxyClass(ClassLoader, String, List, int) line: 178
    ...
  ]
}

jdk.JavaErrorThrow {
  startTime = 17:41:14.012
  message = "'int java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.022
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.029
  objectClass = java.lang.String (classLoader = bootstrap)
  weight = 3.9 kB
  eventThread = "C1 CompilerThread0" (javaThreadId = 11)
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.034
  objectClass = java.lang.String (classLoader = bootstrap)
  weight = 655.6 kB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.lang.StringLatin1.newString(byte[], int, int) line: 769
    java.lang.String.substring(int, int) line: 2714
    java.lang.ClassLoader.checkCerts(String, CodeSource) line: 1154
    java.lang.ClassLoader.preDefineClass(String, ProtectionDomain) line: 907
    java.lang.ClassLoader.defineClass(String, byte[], int, int, ProtectionDomain) line: 1015
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.040
  objectClass = java.util.HashMap$Node[] (classLoader = bootstrap)
  weight = 351.4 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.util.HashMap.resize() line: 702
    java.util.HashMap.putVal(int, Object, Object, boolean, boolean) line: 627
    java.util.HashMap.put(Object, Object) line: 610
    com.sun.jmx.mbeanserver.PerInterface$InitMaps.visitAttribute(String, Object, Object) line: 246
    com.sun.jmx.mbeanserver.MBeanAnalyzer.visit(MBeanAnalyzer$MBeanVisitor) line: 68
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.040
  objectClass = javax.management.MBeanAttributeInfo[] (classLoader = bootstrap)
  weight = 1.4 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    javax.management.StandardMBean.getAttributes(MBeanInfo) line: 1018
    javax.management.StandardMBean.getMBeanInfo() line: 456
    com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName(Object) line: 329
    com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(Object, ObjectName) line: 315
    com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(Object, ObjectName) line: 523
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.046
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.069
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.078
  objectClass = byte[] (classLoader = bootstrap)
  weight = 349.7 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.util.Arrays.copyOf(byte[], int) line: 3537
    java.lang.AbstractStringBuilder.ensureCapacityInternal(int) line: 228
    java.lang.AbstractStringBuilder.append(String) line: 582
    java.lang.StringBuilder.append(String) line: 179
    java.lang.StringBuilder.append(String) line: 91
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.082
  objectClass = java.lang.invoke.LambdaFormEditor$TransformKey (classLoader = bootstrap)
  weight = 337.1 kB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.lang.invoke.LambdaFormEditor$TransformKey.of(byte, int) line: 173
    java.lang.invoke.LambdaFormEditor.bindArgumentForm(int) line: 519
    java.lang.invoke.LambdaFormEditor.bindArgumentL(BoundMethodHandle, int, Object) line: 473
    java.lang.invoke.BoundMethodHandle.bindArgumentL(int, Object) line: 92
    java.lang.invoke.MethodHandles.insertArguments(MethodHandle, int, Object[]) line: 5177
    ...
  ]
}

jdk.Deoptimization {
  startTime = 17:41:14.090
  compileId = 1287
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 577
  bci = 128
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.Deoptimization {
  startTime = 17:41:14.090
  compileId = 1287
  compiler = "c2"
  method = java.util.HashMap.getNode(Object)
  lineNumber = 577
  bci = 128
  instruction = "invokevirtual"
  reason = "bimorphic_or_optimized_type_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.NativeMethodSample {
  startTime = 17:41:14.092
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.102
  objectClass = byte[] (classLoader = bootstrap)
  weight = 357.2 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Class.getDeclaredMethods0(boolean)
    java.lang.Class.privateGetDeclaredMethods(boolean) line: 3402
    java.lang.Class.privateGetPublicMethods() line: 3427
    java.lang.Class.getMethods() line: 2019
    com.sun.jmx.mbeanserver.MBeanIntrospector.getMethods(Class) line: 181
    ...
  ]
}

jdk.JavaErrorThrow {
  startTime = 17:41:14.102
  message = "'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, long, java.lang.Object)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.JavaErrorThrow {
  startTime = 17:41:14.103
  message = "'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, long, java.lang.Object, java.lang.Object)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.116
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.138
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.Deoptimization {
  startTime = 17:41:14.140
  compileId = 1230
  compiler = "c2"
  method = java.util.HashMap.hash(Object)
  lineNumber = 338
  bci = 1
  instruction = "ifnonnull"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "main" (javaThreadId = 1)
}

jdk.Deoptimization {
  startTime = 17:41:14.141
  compileId = 1090
  compiler = "c2"
  method = java.util.HashMap.hash(Object)
  lineNumber = 338
  bci = 1
  instruction = "ifnonnull"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "main" (javaThreadId = 1)
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.144
  objectClass = byte[] (classLoader = bootstrap)
  weight = 657.1 kB
  eventThread = "main" (javaThreadId = 1)
  stackTrace = [
    java.util.Arrays.copyOf(byte[], int) line: 3537
    jdk.internal.loader.Resource.getBytes() line: 120
    jdk.internal.loader.URLClassPath$JarLoader$2.getBytes() line: 893
    jdk.internal.loader.BuiltinClassLoader.defineClass(String, Resource) line: 859
    jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(String) line: 760
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.161
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.JavaErrorThrow {
  startTime = 17:41:14.170
  message = "'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, int, int, int, int)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.185
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ThreadStart {
  startTime = 17:41:14.188
  thread = "main-synchronizedSleep02" (javaThreadId = 23)
  parentThread = "main" (javaThreadId = 1)
  eventThread = "main-synchronizedSleep02" (javaThreadId = 23)
  stackTrace = [
    rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample.main(String[]) line: 12
  ]
}

jdk.ThreadEnd {
  startTime = 17:41:14.188
  thread = "main" (javaThreadId = 1)
  eventThread = "main" (javaThreadId = 1)
}

jdk.ThreadCPULoad {
  startTime = 17:41:14.188
  user = 3.37%
  system = 0.60%
  eventThread = "main" (javaThreadId = 1)
}

jdk.ThreadStart {
  startTime = 17:41:14.189
  thread = "main-synchronizedSleep01" (javaThreadId = 22)
  parentThread = "main" (javaThreadId = 1)
  eventThread = "main-synchronizedSleep01" (javaThreadId = 22)
  stackTrace = [
    rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample.main(String[]) line: 11
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.189
  objectClass = jdk.internal.org.objectweb.asm.MethodWriter (classLoader = bootstrap)
  weight = 678.7 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    jdk.internal.org.objectweb.asm.ClassWriter.visitMethod(int, String, String, String, String[]) line: 484
    java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass() line: 364
    java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass() line: 315
    java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite() line: 228
    java.lang.invoke.LambdaMetafactory.metafactory(MethodHandles$Lookup, String, MethodType, MethodType, MethodHandle, MethodType) line: 341
    ...
  ]
}

jdk.ThreadStart {
  startTime = 17:41:14.189
  thread = N/A
  parentThread = N/A
}

jdk.NativeMethodSample {
  startTime = 17:41:14.208
  sampledThread = "Attach Listener" (javaThreadId = 5)
  state = "STATE_RUNNABLE"
  stackTrace = [
    java.net.NetworkInterface.getAll()
    java.net.NetworkInterface.getNetworkInterfaces() line: 353
    sun.security.provider.SeedGenerator.addNetworkAdapterInfo(MessageDigest) line: 230
    sun.security.provider.SeedGenerator$1.run() line: 180
    sun.security.provider.SeedGenerator$1.run() line: 168
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.231
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.254
  sampledThread = "Attach Listener" (javaThreadId = 5)
  state = "STATE_RUNNABLE"
  stackTrace = [
    java.net.NetworkInterface.getMacAddr0(byte[], String, int)
    java.net.NetworkInterface.getHardwareAddress() line: 537
    sun.security.provider.SeedGenerator.addNetworkAdapterInfo(MessageDigest) line: 235
    sun.security.provider.SeedGenerator$1.run() line: 180
    sun.security.provider.SeedGenerator$1.run() line: 168
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.278
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ExecutionSample {
  startTime = 17:41:14.303
  sampledThread = "Attach Listener" (javaThreadId = 5)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.security.provider.SHA.implCompress0(byte[], int) line: 154
    sun.security.provider.SHA.implCompress(byte[], int) line: 130
    sun.security.provider.DigestBase.engineUpdate(byte[], int, int) line: 124
    java.security.MessageDigest$Delegate.engineUpdate(byte[], int, int) line: 658
    java.security.MessageDigest.update(byte[]) line: 359
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.303
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.314
  objectClass = byte[] (classLoader = bootstrap)
  weight = 351.5 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.util.Arrays.copyOfRange(byte[], int, int) line: 3822
    java.lang.StringLatin1.newString(byte[], int, int) line: 769
    java.lang.StringBuilder.toString() line: 453
    sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.acceptEntry(String, BasicFileAttributes) line: 147
    sun.nio.fs.WindowsDirectoryStream$WindowsDirectoryIterator.readNextEntry() line: 200
    ...
  ]
}

jdk.JavaErrorThrow {
  startTime = 17:41:14.323
  message = "'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, int, int, int, int)'"
  thrownClass = java.lang.NoSuchMethodError (classLoader = bootstrap)
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    java.lang.Error.<init>(String) line: 72
    java.lang.LinkageError.<init>(String) line: 55
    java.lang.IncompatibleClassChangeError.<init>(String) line: 54
    java.lang.NoSuchMethodError.<init>(String) line: 57
    java.lang.invoke.MethodHandleNatives.resolve(MemberName, Class, int, boolean)
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.325
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.342
  objectClass = jdk.internal.org.objectweb.asm.SymbolTable$Entry (classLoader = bootstrap)
  weight = 351.4 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference(int, String) line: 1039
    jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass(String) line: 544
    jdk.internal.org.objectweb.asm.ClassWriter.visit(int, int, String, String, String, String[]) line: 322
    java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass() line: 344
    java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass() line: 315
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.350
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.Deoptimization {
  startTime = 17:41:14.358
  compileId = 1940
  compiler = "c2"
  method = java.lang.StringLatin1.lastIndexOf(byte[], int, int)
  lineNumber = 294
  bci = 19
  instruction = "iflt"
  reason = "loop_limit_check"
  action = "maybe_recompile"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.ThreadStart {
  startTime = 17:41:14.362
  thread = "RMI TCP Accept-0" (javaThreadId = 25)
  parentThread = "Attach Listener" (javaThreadId = 5)
  eventThread = "RMI TCP Accept-0" (javaThreadId = 25)
  stackTrace = [
    sun.rmi.transport.tcp.TCPTransport.listen() line: 344
    sun.rmi.transport.tcp.TCPTransport.exportObject(Target) line: 243
    sun.rmi.transport.tcp.TCPEndpoint.exportObject(Target) line: 415
    sun.rmi.transport.LiveRef.exportObject(Target) line: 147
    sun.rmi.server.UnicastServerRef.exportObject(Remote, Object, boolean) line: 235
    ...
  ]
}

jdk.Deoptimization {
  startTime = 17:41:14.372
  compileId = 1277
  compiler = "c2"
  method = java.io.ByteArrayOutputStream.ensureCapacity(int)
  lineNumber = 99
  bci = 11
  instruction = "ifle"
  reason = "unstable_if"
  action = "reinterpret"
  eventThread = "Attach Listener" (javaThreadId = 5)
}

jdk.NativeMethodSample {
  startTime = 17:41:14.373
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.396
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ObjectAllocationSample {
  startTime = 17:41:14.401
  objectClass = java.lang.Object[] (classLoader = bootstrap)
  weight = 683.5 kB
  eventThread = "Attach Listener" (javaThreadId = 5)
  stackTrace = [
    sun.util.resources.TimeZoneNames.getContents() line: 291
    sun.util.resources.OpenListResourceBundle.loadLookup() line: 137
    sun.util.resources.OpenListResourceBundle.loadLookupTablesIfNecessary() line: 128
    sun.util.resources.OpenListResourceBundle.handleKeySet() line: 96
    java.util.ResourceBundle.containsKey(String) line: 2294
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.419
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.443
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.466
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.489
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.512
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.536
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.559
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.582
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.605
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.628
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.652
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.675
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.698
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.721
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.745
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.768
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.791
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.814
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.837
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.861
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.884
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.907
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.930
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.954
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:14.977
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.000
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.023
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.046
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.070
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.093
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.117
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.139
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.163
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.186
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.209
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.233
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.255
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.279
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.302
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.325
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.349
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.372
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.395
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.418
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.442
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.464
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.488
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.511
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.534
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.558
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.581
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.604
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.628
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.651
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.674
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.697
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.720
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.744
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.767
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.791
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.813
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.837
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.860
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.883
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.906
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.929
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.952
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.975
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:15.999
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.022
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.045
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.068
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.092
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.115
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.138
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.161
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.185
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.208
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.231
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.254
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.277
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.301
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.324
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.347
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.370
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.394
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.417
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.440
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.463
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.CPULoad {
  startTime = 17:41:16.486
  jvmUser = 0.00%
  jvmSystem = 9.52%
  machineTotal = 17.77%
}

jdk.JavaThreadStatistics {
  startTime = 17:41:16.486
  activeCount = 14
  daemonCount = 11
  accumulatedCount = 16
  peakCount = 14
}

jdk.ClassLoadingStatistics {
  startTime = 17:41:16.486
  loadedClassCount = 2601
  unloadedClassCount = 0
}

jdk.CompilerStatistics {
  startTime = 17:41:16.486
  compileCount = 1862
  bailoutCount = 4
  invalidatedCount = 0
  osrCompileCount = 18
  standardCompileCount = 1844
  osrBytesCompiled = 0 bytes
  standardBytesCompiled = 0 bytes
  nmethodsSize = 2.7 MB
  nmethodCodeSize = 1.8 MB
  peakTimeSpent = 461 ms
  totalTimeSpent = 3.30 s
}

jdk.ExceptionStatistics {
  startTime = 17:41:16.486
  throwables = 77
  eventThread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.NativeMethodSample {
  startTime = 17:41:16.486
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.509
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.532
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.556
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.579
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.602
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.625
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.649
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.671
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.694
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.717
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.740
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.763
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.787
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.811
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.834
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.856
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.879
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.902
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.926
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.950
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.973
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:16.996
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.020
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.044
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.067
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.090
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.112
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.134
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.157
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.181
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.204
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.227
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.250
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.273
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.296
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.320
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.343
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.366
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.389
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.412
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.435
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.459
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.482
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.505
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.ThreadSleep {
  startTime = 17:41:14.189
  duration = 3.34 s
  time = 3.00 s
  eventThread = "main-synchronizedSleep02" (javaThreadId = 23)
  stackTrace = [
    java.lang.Thread.sleep(long)
    rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample.synchronizedSleep() line: 19
    java.lang.Thread.run() line: 840
  ]
}

jdk.JavaMonitorEnter {
  startTime = 17:41:14.190
  duration = 3.34 s
  monitorClass = java.lang.Class (classLoader = bootstrap)
  previousOwner = "main-synchronizedSleep02" (javaThreadId = 23)
  address = 0x1FD146DA6B0
  eventThread = "main-synchronizedSleep01" (javaThreadId = 22)
  stackTrace = [
    rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample.synchronizedSleep() line: 17
    java.lang.Thread.run() line: 840
  ]
}

jdk.ThreadEnd {
  startTime = 17:41:17.527
  thread = "main-synchronizedSleep02" (javaThreadId = 23)
  eventThread = "main-synchronizedSleep02" (javaThreadId = 23)
}

jdk.NativeMethodSample {
  startTime = 17:41:17.528
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.552
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.575
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.598
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.ThreadEnd {
  startTime = 17:41:17.600
  thread = "C2 CompilerThread2" (javaThreadId = 10)
  eventThread = "C2 CompilerThread2" (javaThreadId = 10)
}

jdk.ThreadCPULoad {
  startTime = 17:41:17.600
  user = 1.27%
  system = 0.00%
  eventThread = "C2 CompilerThread2" (javaThreadId = 10)
}

jdk.NativeMethodSample {
  startTime = 17:41:17.622
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.CPULoad {
  startTime = 17:41:17.636
  jvmUser = 0.00%
  jvmSystem = 0.00%
  machineTotal = 7.29%
}

jdk.JavaThreadStatistics {
  startTime = 17:41:17.636
  activeCount = 13
  daemonCount = 11
  accumulatedCount = 16
  peakCount = 14
}

jdk.ClassLoadingStatistics {
  startTime = 17:41:17.636
  loadedClassCount = 2601
  unloadedClassCount = 0
}

jdk.CompilerStatistics {
  startTime = 17:41:17.636
  compileCount = 1863
  bailoutCount = 4
  invalidatedCount = 0
  osrCompileCount = 18
  standardCompileCount = 1845
  osrBytesCompiled = 0 bytes
  standardBytesCompiled = 0 bytes
  nmethodsSize = 2.7 MB
  nmethodCodeSize = 1.8 MB
  peakTimeSpent = 461 ms
  totalTimeSpent = 3.30 s
}

jdk.ExceptionStatistics {
  startTime = 17:41:17.636
  throwables = 77
  eventThread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.NativeMethodSample {
  startTime = 17:41:17.644
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.666
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.689
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.712
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.736
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.759
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.782
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.805
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.828
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.852
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.875
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.898
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.922
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.944
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.966
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:17.990
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.012
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.035
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.059
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.082
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.105
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.128
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.151
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.175
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.198
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.221
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.244
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.267
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.289
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.313
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.336
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.361
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.384
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.407
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.431
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.455
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.478
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.501
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.524
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.547
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.569
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.592
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.615
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.639
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.662
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.684
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.708
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.731
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.755
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.778
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.CPULoad {
  startTime = 17:41:18.801
  jvmUser = 0.00%
  jvmSystem = 0.56%
  machineTotal = 3.84%
}

jdk.JavaThreadStatistics {
  startTime = 17:41:18.801
  activeCount = 13
  daemonCount = 11
  accumulatedCount = 16
  peakCount = 14
}

jdk.ClassLoadingStatistics {
  startTime = 17:41:18.801
  loadedClassCount = 2601
  unloadedClassCount = 0
}

jdk.CompilerStatistics {
  startTime = 17:41:18.801
  compileCount = 1863
  bailoutCount = 4
  invalidatedCount = 0
  osrCompileCount = 18
  standardCompileCount = 1845
  osrBytesCompiled = 0 bytes
  standardBytesCompiled = 0 bytes
  nmethodsSize = 2.7 MB
  nmethodCodeSize = 1.8 MB
  peakTimeSpent = 461 ms
  totalTimeSpent = 3.30 s
}

jdk.ExceptionStatistics {
  startTime = 17:41:18.801
  throwables = 77
  eventThread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.NativeMethodSample {
  startTime = 17:41:18.801
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.824
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.848
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.870
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.894
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.916
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.940
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.963
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:18.986
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.010
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.034
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.057
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.079
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.101
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.124
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.148
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.172
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.195
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.217
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.240
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.262
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.285
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.308
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.332
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.354
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.376
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.399
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.DirectBufferStatistics {
  startTime = 17:41:19.411
  maxCapacity = 4.0 GB
  count = 1
  totalCapacity = 8.0 kB
  memoryUsed = 8.0 kB
  eventThread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.ThreadEnd {
  startTime = 17:41:19.412
  thread = "C2 CompilerThread1" (javaThreadId = 9)
  eventThread = "C2 CompilerThread1" (javaThreadId = 9)
}

jdk.ThreadCPULoad {
  startTime = 17:41:19.412
  user = 0.04%
  system = 0.04%
  eventThread = "C2 CompilerThread1" (javaThreadId = 9)
}

jdk.NativeMethodSample {
  startTime = 17:41:19.422
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.446
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.469
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.492
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.516
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.539
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.562
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.586
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.610
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.634
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.657
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.681
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.703
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.727
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.750
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.773
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.797
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.821
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.843
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.866
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.890
  sampledThread = "JFR Periodic Tasks" (javaThreadId = 16)
  state = "STATE_RUNNABLE"
  stackTrace = [
    jdk.jfr.internal.JVM.emitEvent(long, long, long)
    jdk.jfr.internal.RequestEngine$RequestHook.execute() line: 70
    jdk.jfr.internal.RequestEngine.run_requests(Collection) line: 241
    jdk.jfr.internal.RequestEngine.doPeriodic() line: 192
    jdk.jfr.internal.PlatformRecorder.periodicTask() line: 518
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.913
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.CPULoad {
  startTime = 17:41:19.924
  jvmUser = 0.00%
  jvmSystem = 0.19%
  machineTotal = 4.06%
}

jdk.JavaThreadStatistics {
  startTime = 17:41:19.924
  activeCount = 13
  daemonCount = 11
  accumulatedCount = 16
  peakCount = 14
}

jdk.ClassLoadingStatistics {
  startTime = 17:41:19.924
  loadedClassCount = 2601
  unloadedClassCount = 0
}

jdk.CompilerStatistics {
  startTime = 17:41:19.924
  compileCount = 1864
  bailoutCount = 4
  invalidatedCount = 0
  osrCompileCount = 18
  standardCompileCount = 1846
  osrBytesCompiled = 0 bytes
  standardBytesCompiled = 0 bytes
  nmethodsSize = 2.7 MB
  nmethodCodeSize = 1.8 MB
  peakTimeSpent = 461 ms
  totalTimeSpent = 3.30 s
}

jdk.ExceptionStatistics {
  startTime = 17:41:19.924
  throwables = 77
  eventThread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.NativeMethodSample {
  startTime = 17:41:19.935
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.959
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:19.982
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.006
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.029
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.053
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.075
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.098
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.122
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.144
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.168
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.192
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.214
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.238
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.260
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.284
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.307
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.330
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.352
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.375
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.398
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.421
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.444
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.467
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.490
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.512
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.534
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.557
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.579
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.603
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.627
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.650
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.673
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.696
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.718
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.741
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.764
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.788
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.811
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.833
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.856
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.ThreadSleep {
  startTime = 17:41:17.528
  duration = 3.34 s
  time = 3.00 s
  eventThread = "main-synchronizedSleep01" (javaThreadId = 22)
  stackTrace = [
    java.lang.Thread.sleep(long)
    rujche.sample.jmc.aa.java.application.aa.threads.ThreadsSample.synchronizedSleep() line: 19
    java.lang.Thread.run() line: 840
  ]
}

jdk.ThreadEnd {
  startTime = 17:41:20.864
  thread = "main-synchronizedSleep01" (javaThreadId = 22)
  eventThread = "main-synchronizedSleep01" (javaThreadId = 22)
}

jdk.Shutdown {
  startTime = 17:41:20.864
  reason = "No remaining non-daemon Java threads"
  stackTrace = [
  ]
}

jdk.ThreadStart {
  startTime = 17:41:20.866
  thread = "JFR Shutdown Hook" (javaThreadId = 17)
  parentThread = N/A
  eventThread = "JFR Shutdown Hook" (javaThreadId = 17)
  stackTrace = [
    java.lang.ApplicationShutdownHooks.runHooks() line: 102
    java.lang.ApplicationShutdownHooks$1.run() line: 46
    java.lang.Shutdown.runHooks() line: 130
    java.lang.Shutdown.shutdown() line: 185
  ]
}

jdk.ThreadStart {
  startTime = 17:41:20.866
  thread = "Logging-Cleaner" (javaThreadId = 21)
  parentThread = N/A
  eventThread = "Logging-Cleaner" (javaThreadId = 21)
  stackTrace = [
    java.lang.ApplicationShutdownHooks.runHooks() line: 102
    java.lang.ApplicationShutdownHooks$1.run() line: 46
    java.lang.Shutdown.runHooks() line: 130
    java.lang.Shutdown.shutdown() line: 185
  ]
}

jdk.ThreadEnd {
  startTime = 17:41:20.867
  thread = "Logging-Cleaner" (javaThreadId = 21)
  eventThread = "Logging-Cleaner" (javaThreadId = 21)
}

jdk.ExecutionSample {
  startTime = 17:41:20.868
  sampledThread = "JFR Shutdown Hook" (javaThreadId = 17)
  state = "STATE_RUNNABLE"
  stackTrace = [
    java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.<init>(InnerClassLambdaMetafactory, MethodVisitor) line: 545
    java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass() line: 366
    java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass() line: 315
    java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite() line: 228
    java.lang.invoke.LambdaMetafactory.metafactory(MethodHandles$Lookup, String, MethodType, MethodType, MethodHandle, MethodType) line: 341
    ...
  ]
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17744"
  commandLine = "C:\Windows\system32\conhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "22600"
  commandLine = "C:\Windows\system32\conhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18808"
  commandLine = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4392"
  commandLine = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8364"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14896"
  commandLine = "C:\Windows\system32\BackgroundTaskHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12144"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7764"
  commandLine = "C:\Windows\system32\backgroundTaskHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5540"
  commandLine = "SearchProtocolHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12752"
  commandLine = "audiodg.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3468"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14160"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16520"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16048"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7816"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "23252"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5568"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20164"
  commandLine = "C:\Program Files\WindowsApps\Microsoft.YourPhone_1.24061.93.0_x64__8wekyb3d8bbwe\PhoneExperienceHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18592"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\idea64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12248"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21832"
  commandLine = "SenseAPZ.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4380"
  commandLine = "SenseIR.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20472"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2220"
  commandLine = "C:\Program Files (x86)\Tencent\QQPinyin\6.6.6304.400\QQPYUserCenter.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21856"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10320"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18392"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12624"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5648"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "22396"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "22220"
  commandLine = "C:\Program Files\WindowsApps\Microsoft.OutlookForWindows_1.2024.625.600_x64__8wekyb3d8bbwe\olk.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21764"
  commandLine = "SenseNdr.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "19620"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18080"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "15460"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20448"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11108"
  commandLine = "C:\Windows\system32\conhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2108"
  commandLine = "C:\Users\rujche\AppData\Local\JetBrains\IntelliJIdea2024.1\full-line\models\21caac6d-7218-3c39-bb75-af39a95d066f\full-line-inference.zip_extracted\full-line-inference.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11936"
  commandLine = "C:\Windows\system32\conhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4840"
  commandLine = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7448"
  commandLine = "C:\Program Files\Git\bin\..\usr\bin\bash.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11812"
  commandLine = "C:\Program Files\Git\bin\bash.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16972"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\lib\pty4j\win\x86-64\OpenConsole.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21212"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7340"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1068"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10436"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\idea64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21292"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\idea64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21296"
  commandLine = "C:\Windows\system32\conhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "21228"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\fsnotifier.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13080"
  commandLine = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\idea64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18632"
  commandLine = "C:\Users\rujche\Work\software\jmc-9.0.0_windows-x64\JDK Mission Control\jmc.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17344"
  commandLine = "C:\Users\rujche\AppData\Local\Microsoft\OneDrive\24.132.0701.0001\FileCoAuth.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20076"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20596"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "20828"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6392"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "19808"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "19912"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17440"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2068"
  commandLine = "C:\Program Files\WindowsApps\PaloAltoNetworks.GlobalProtect_6.0.5005.0_x64__rn9aeerfb38dg\GpVpnApp.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17988"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17944"
  commandLine = "C:\Windows\SystemApps\Microsoft.LockApp_cw5n1h2txyewy\LockApp.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18092"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "18000"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10184"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16800"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16996"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3960"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3804"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11972"
  commandLine = "C:\Windows\System32\SystemSettingsBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8448"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9000"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2468"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1416"
  commandLine = "C:\Windows\system32\ApplicationFrameHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16212"
  commandLine = "C:\Windows\ImmersiveControlPanel\SystemSettings.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14996"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1508"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16616"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17052"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "17220"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16776"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16456"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16436"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9316"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13600"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "16272"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7136"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11912"
  commandLine = "C:\Program Files\WindowsApps\MSTeams_24165.1413.2984.5395_x64__8wekyb3d8bbwe\ms-teams.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6104"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10852"
  commandLine = "C:\Windows\SystemApps\ShellExperienceHost_cw5n1h2txyewy\ShellExperienceHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12224"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10664"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7220"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1800"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10176"
  commandLine = "C:\Users\rujche\AppData\Local\Microsoft\OneDrive\24.132.0701.0001\Microsoft.SharePoint.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12028"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9956"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4128"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12932"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12400"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3764"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4928"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4868"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3716"
  commandLine = "C:\Windows\system32\DllHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "15060"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14808"
  commandLine = "C:\Users\rujche\AppData\Local\Microsoft\OneDrive\OneDrive.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14672"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14656"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14624"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14588"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14552"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14408"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14360"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14344"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9924"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3460"
  commandLine = "C:\Program Files (x86)\Microsoft\EdgeWebView\Application\126.0.2592.87\msedgewebview2.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9524"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13512"
  commandLine = "C:\Program Files\WindowsApps\MSTeams_24165.1413.2984.5395_x64__8wekyb3d8bbwe\ms-teams.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14248"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14152"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "14072"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13864"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13836"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13824"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13628"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13588"
  commandLine = "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13528"
  commandLine = "C:\Windows\System32\DriverStore\FileRepository\hdxsstm.inf_amd64_7d200f2580ecd8a5\RtkAudUService64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10056"
  commandLine = "C:\Windows\CCM\SCNotification.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4980"
  commandLine = "C:\Windows\System32\SurfaceDTX.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13268"
  commandLine = "SecurityHealthService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13228"
  commandLine = "C:\Windows\System32\SecurityHealthSystray.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13184"
  commandLine = "C:\Windows\System32\smartscreen.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "13068"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12916"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9588"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12064"
  commandLine = "C:\Windows\SystemApps\MicrosoftWindows.Client.CBS_cw5n1h2txyewy\TextInputHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12036"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11828"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8020"
  commandLine = "C:\Windows\System32\oobe\UserOOBEBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8024"
  commandLine = "MoUsoCoreWorker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12136"
  commandLine = "SearchIndexer.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "12112"
  commandLine = "C:\Windows\System32\LocationNotificationWindows.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11880"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11448"
  commandLine = "TabTip.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11416"
  commandLine = "ctfmon.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "11072"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2652"
  commandLine = "C:\Windows\system32\DllHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10704"
  commandLine = "uhssvc.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10364"
  commandLine = "C:\Program Files\WindowsApps\MicrosoftWindows.Client.WebExperience_524.13200.30.0_x64__cw5n1h2txyewy\Dashboard\widgetservice.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "10328"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7700"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9272"
  commandLine = "C:\Windows\System32\RuntimeBroker.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1256"
  commandLine = "C:\Program Files\WindowsApps\MicrosoftWindows.Client.WebExperience_524.13200.30.0_x64__cw5n1h2txyewy\Dashboard\Widgets.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6836"
  commandLine = "C:\Windows\SystemApps\Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy\StartMenuExperienceHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2324"
  commandLine = "C:\Windows\SystemApps\MicrosoftWindows.Client.CBS_cw5n1h2txyewy\SearchHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9904"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9840"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "9968"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4116"
  commandLine = "C:\Windows\Explorer.EXE"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7844"
  commandLine = "WmiPrvSE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6460"
  commandLine = "MicrosoftEdgeUpdate.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7828"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7528"
  commandLine = "C:\Windows\system32\taskhostw.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6652"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1884"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2472"
  commandLine = "CcmExec.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1692"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6972"
  commandLine = "C:\Windows\system32\svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1040"
  commandLine = "C:\Windows\system32\sihost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7088"
  commandLine = "C:\ProgramData\Microsoft\Windows Defender\Platform\4.18.24060.7-0\DlpUserAgent.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2584"
  commandLine = "C:\Windows\system32\Intel\DPTF\dptf_helper.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2644"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3680"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1780"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8868"
  commandLine = "SenseTVM.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8796"
  commandLine = "SenseCE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8748"
  commandLine = "SenseCE.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "8632"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3516"
  commandLine = "NisSrv.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7804"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7796"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7716"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7488"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7332"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "7256"
  commandLine = "NVDisplay.Container.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6512"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6884"
  commandLine = "AggregatorHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "6500"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5952"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5468"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5364"
  commandLine = "wslservice.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5280"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5264"
  commandLine = "WMIRegistrationService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5256"
  commandLine = "MsMpEng.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5232"
  commandLine = "SurfaceUsbHubFwUpdateService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5224"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5140"
  commandLine = "MpDefenderCoreService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5132"
  commandLine = "SurfaceService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4696"
  commandLine = "MsSense.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4376"
  commandLine = "SurfaceDtxService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4108"
  commandLine = "ssh-agent.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4100"
  commandLine = "MpDlpService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5104"
  commandLine = "SurfaceColorService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5088"
  commandLine = "Microsoft.Management.Services.IntuneWindowsAgent.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5080"
  commandLine = "RhService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5036"
  commandLine = "EpmService.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5016"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5008"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "5000"
  commandLine = "esif_uf.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4992"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4984"
  commandLine = "RtkAudUService64.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4968"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4896"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4716"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4684"
  commandLine = "spoolsv.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4536"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4500"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4448"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4440"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4360"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4324"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4316"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4060"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3968"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3932"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3756"
  commandLine = "WUDFHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3640"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3628"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3540"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3532"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3480"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3364"
  commandLine = "Memory Compression"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3292"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3268"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3260"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3196"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3168"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3120"
  commandLine = "NVDisplay.Container.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3076"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2588"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3044"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "3000"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2732"
  commandLine = "WUDFHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2692"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2548"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2540"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2416"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2360"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2292"
  commandLine = "dwm.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2164"
  commandLine = "IntelCpHeciSvc.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2096"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1784"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1180"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2036"
  commandLine = "IntelCpHDCPSvc.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "2000"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1860"
  commandLine = "WUDFHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1844"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1836"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1816"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1720"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1668"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1644"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1516"
  commandLine = "WUDFHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1472"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1428"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1312"
  commandLine = "WUDFHost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1288"
  commandLine = "fontdrvhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1280"
  commandLine = "fontdrvhost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1248"
  commandLine = "svchost.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1108"
  commandLine = "winlogon.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1044"
  commandLine = "lsass.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1032"
  commandLine = "LsaIso.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "932"
  commandLine = "services.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "644"
  commandLine = "csrss.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "1020"
  commandLine = "wininit.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "904"
  commandLine = "csrss.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "588"
  commandLine = "smss.exe"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "156"
  commandLine = "Registry"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "108"
  commandLine = "Secure System"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "4"
  commandLine = "System"
}

jdk.SystemProcess {
  startTime = 17:41:20.869
  pid = "0"
  commandLine = "[System Process]"
}

jdk.NativeMethodSample {
  startTime = 17:41:20.880
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.903
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.927
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.951
  sampledThread = "Monitor Ctrl-Break" (javaThreadId = 14)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.SocketDispatcher.read0(FileDescriptor, long, int)
    sun.nio.ch.SocketDispatcher.read(FileDescriptor, long, int) line: 46
    sun.nio.ch.NioSocketImpl.tryRead(FileDescriptor, byte[], int, int) line: 266
    sun.nio.ch.NioSocketImpl.implRead(byte[], int, int) line: 317
    sun.nio.ch.NioSocketImpl.read(byte[], int, int) line: 355
    ...
  ]
}

jdk.NativeMethodSample {
  startTime = 17:41:20.973
  sampledThread = "RMI TCP Accept-0" (javaThreadId = 25)
  state = "STATE_RUNNABLE"
  stackTrace = [
    sun.nio.ch.Net.accept(FileDescriptor, FileDescriptor, InetSocketAddress[])
    sun.nio.ch.NioSocketImpl.accept(SocketImpl) line: 760
    java.net.ServerSocket.implAccept(SocketImpl) line: 675
    java.net.ServerSocket.platformImplAccept() line: 641
    java.net.ServerSocket.implAccept() line: 617
    ...
  ]
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 8)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14042050
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 21)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041010
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 12)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140409D0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 20)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041B50
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 24)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14292070
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 420 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  parentClassLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  classLoaderData = 0x1FCCDBDFE30
  classCount = 115
  chunkSize = 64.6 kB
  blockSize = 63.5 kB
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 13)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14040ED0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE1190
  classCount = 2
  chunkSize = 896 bytes
  blockSize = 736 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 5)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE0E70
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 6)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE0F10
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 25)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14293150
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 420 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 17)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041970
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 9)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041DD0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 19)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041BF0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 434 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 16)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14042190
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 14)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14040F70
  classCount = 1
  chunkSize = 384 bytes
  blockSize = 235 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 4)
  parentClassLoader = N/A
  classLoaderData = 0x1FCCDBE19B0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 18)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140425F0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 391 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 7)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041E70
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 22)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14A70590
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = N/A
  parentClassLoader = N/A
  classLoaderData = 0x1FCCD78BEF0
  classCount = 2647
  chunkSize = 1005.9 kB
  blockSize = 967.1 kB
  hiddenClassCount = 52
  hiddenChunkSize = 19.8 kB
  hiddenBlockSize = 12.5 kB
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 11)
  parentClassLoader = N/A
  classLoaderData = 0x1FD140422D0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 23)
  parentClassLoader = N/A
  classLoaderData = 0x1FD142930B0
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 420 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 10)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041A10
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 427 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ClassLoaderStatistics {
  startTime = 17:41:20.979
  classLoader = jdk.internal.reflect.DelegatingClassLoader (id = 15)
  parentClassLoader = N/A
  classLoaderData = 0x1FD14041790
  classCount = 1
  chunkSize = 512 bytes
  blockSize = 393 bytes
  hiddenClassCount = 0
  hiddenChunkSize = 0 bytes
  hiddenBlockSize = 0 bytes
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Reference Handler" (javaThreadId = 2)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 280 bytes
  thread = "Finalizer" (javaThreadId = 3)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Signal Dispatcher" (javaThreadId = 4)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 4.0 MB
  thread = "Attach Listener" (javaThreadId = 5)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Service Thread" (javaThreadId = 6)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Monitor Deflation Thread" (javaThreadId = 7)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "C2 CompilerThread0" (javaThreadId = 8)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 5.9 kB
  thread = "C1 CompilerThread0" (javaThreadId = 11)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Sweeper thread" (javaThreadId = 12)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Common-Cleaner" (javaThreadId = 13)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 129.1 kB
  thread = "Monitor Ctrl-Break" (javaThreadId = 14)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "JFR Recorder Thread" (javaThreadId = 15)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 456 bytes
  thread = "JFR Periodic Tasks" (javaThreadId = 16)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "JFR Recording Scheduler" (javaThreadId = 19)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 0 bytes
  thread = "Notification Thread" (javaThreadId = 20)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 576 bytes
  thread = N/A
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 664 bytes
  thread = "RMI TCP Accept-0" (javaThreadId = 25)
}

jdk.ThreadAllocationStatistics {
  startTime = 17:41:20.979
  allocated = 9.7 kB
  thread = "JFR Shutdown Hook" (javaThreadId = 17)
}

jdk.PhysicalMemory {
  startTime = 17:41:20.979
  totalSize = 15.9 GB
  usedSize = 12.3 GB
}

jdk.ThreadDump {
  startTime = 17:41:20.979
  result = "2024-07-10 17:41:20
Full thread dump OpenJDK 64-Bit Server VM (17.0.11+9-LTS mixed mode, sharing):

Threads class SMR info:
_java_thread_list=0x000001fd146d9ae0, length=18, elements={
0x000001fccd843ad0, 0x000001fccd844950, 0x000001fccd855fa0, 0x000001fccd856b60,
0x000001fccd857620, 0x000001fccd858ff0, 0x000001fccd859a60, 0x000001fccd85b470,
0x000001fccd89b760, 0x000001fccdbf6400, 0x000001fccddd30c0, 0x000001fd1389d470,
0x000001fd1472f320, 0x000001fd13fc7900, 0x000001fd13fc81c0, 0x000001fd146d7c50,
0x000001fd146d8670, 0x000001fd146d8b80
}

"Reference Handler" #2 daemon prio=10 os_prio=2 cpu=0.00ms elapsed=7.07s tid=0x000001fccd843ad0 nid=0x4640 waiting on condition  [0x0000009f828ff000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@17.0.11/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@17.0.11/Reference.java:253)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@17.0.11/Reference.java:215)

"Finalizer" #3 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=7.07s tid=0x000001fccd844950 nid=0x3bc0 in Object.wait()  [0x0000009f829ff000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000070fc156c8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:155)
	- locked <0x000000070fc156c8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@17.0.11/Finalizer.java:172)

"Signal Dispatcher" #4 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=7.06s tid=0x000001fccd855fa0 nid=0x2394 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Attach Listener" #5 daemon prio=5 os_prio=2 cpu=125.00ms elapsed=7.06s tid=0x000001fccd856b60 nid=0x57f4 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #6 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=7.06s tid=0x000001fccd857620 nid=0x3bf4 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Monitor Deflation Thread" #7 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=7.06s tid=0x000001fccd858ff0 nid=0x3d48 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #8 daemon prio=9 os_prio=2 cpu=78.12ms elapsed=7.06s tid=0x000001fccd859a60 nid=0x3a50 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #11 daemon prio=9 os_prio=2 cpu=78.12ms elapsed=7.06s tid=0x000001fccd85b470 nid=0x5440 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #12 daemon prio=9 os_prio=2 cpu=0.00ms elapsed=7.06s tid=0x000001fccd89b760 nid=0x22b4 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #13 daemon prio=8 os_prio=1 cpu=0.00ms elapsed=7.02s tid=0x000001fccdbf6400 nid=0xa38 in Object.wait()  [0x0000009f831ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000070fc2ac70> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.11/ReferenceQueue.java:155)
	- locked <0x000000070fc2ac70> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@17.0.11/CleanerImpl.java:140)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)
	at jdk.internal.misc.InnocuousThread.run(java.base@17.0.11/InnocuousThread.java:162)

"Monitor Ctrl-Break" #14 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=6.94s tid=0x000001fccddd30c0 nid=0x1df8 runnable  [0x0000009f832fe000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.SocketDispatcher.read0(java.base@17.0.11/Native Method)
	at sun.nio.ch.SocketDispatcher.read(java.base@17.0.11/SocketDispatcher.java:46)
	at sun.nio.ch.NioSocketImpl.tryRead(java.base@17.0.11/NioSocketImpl.java:266)
	at sun.nio.ch.NioSocketImpl.implRead(java.base@17.0.11/NioSocketImpl.java:317)
	at sun.nio.ch.NioSocketImpl.read(java.base@17.0.11/NioSocketImpl.java:355)
	at sun.nio.ch.NioSocketImpl$1.read(java.base@17.0.11/NioSocketImpl.java:808)
	at java.net.Socket$SocketInputStream.read(java.base@17.0.11/Unknown Source)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@17.0.11/StreamDecoder.java:281)
	at sun.nio.cs.StreamDecoder.implRead(java.base@17.0.11/StreamDecoder.java:324)
	at sun.nio.cs.StreamDecoder.read(java.base@17.0.11/StreamDecoder.java:189)
	- locked <0x000000070fc11280> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@17.0.11/InputStreamReader.java:177)
	at java.io.BufferedReader.fill(java.base@17.0.11/BufferedReader.java:162)
	at java.io.BufferedReader.readLine(java.base@17.0.11/BufferedReader.java:329)
	- locked <0x000000070fc11280> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@17.0.11/BufferedReader.java:396)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:54)

"JFR Recorder Thread" #15 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=6.86s tid=0x000001fd1389d470 nid=0x45e8 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"JFR Periodic Tasks" #16 daemon prio=5 os_prio=0 cpu=359.38ms elapsed=6.46s tid=0x000001fd1472f320 nid=0x47cc in Object.wait()  [0x0000009f836ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000070fc15ac0> (a jdk.jfr.internal.JVM$ChunkRotationMonitor)
	at jdk.jfr.internal.PlatformRecorder.takeNap(jdk.jfr@17.0.11/PlatformRecorder.java:544)
	- locked <0x000000070fc15ac0> (a jdk.jfr.internal.JVM$ChunkRotationMonitor)
	at jdk.jfr.internal.PlatformRecorder.periodicTask(jdk.jfr@17.0.11/PlatformRecorder.java:524)
	at jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1(jdk.jfr@17.0.11/PlatformRecorder.java:449)
	at jdk.jfr.internal.PlatformRecorder$$Lambda$66/0x000001fccf0464c0.run(jdk.jfr@17.0.11/Unknown Source)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)

"JFR Recording Scheduler" #19 daemon prio=5 os_prio=0 cpu=0.00ms elapsed=6.34s tid=0x000001fd13fc7900 nid=0xd04 in Object.wait()  [0x0000009f839ff000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000070fc2afd8> (a java.util.TaskQueue)
	at java.util.TimerThread.mainLoop(java.base@17.0.11/Timer.java:563)
	- locked <0x000000070fc2afd8> (a java.util.TaskQueue)
	at java.util.TimerThread.run(java.base@17.0.11/Timer.java:516)

"Notification Thread" #20 daemon prio=9 os_prio=0 cpu=0.00ms elapsed=6.33s tid=0x000001fd13fc81c0 nid=0x1e04 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"DestroyJavaVM" #24 prio=5 os_prio=0 cpu=312.50ms elapsed=6.11s tid=0x000001fd146d7c50 nid=0x54b0 in Object.wait()  [0x0000009f821fe000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.11/Native Method)
	- waiting on <0x000000070fd58d90> (a java.lang.Thread)
	at java.lang.Thread.join(java.base@17.0.11/Thread.java:1313)
	- locked <0x000000070fd58d90> (a java.lang.Thread)
	at java.lang.Thread.join(java.base@17.0.11/Thread.java:1381)
	at java.lang.ApplicationShutdownHooks.runHooks(java.base@17.0.11/ApplicationShutdownHooks.java:107)
	at java.lang.ApplicationShutdownHooks$1.run(java.base@17.0.11/ApplicationShutdownHooks.java:46)
	at java.lang.Shutdown.runHooks(java.base@17.0.11/Shutdown.java:130)
	at java.lang.Shutdown.shutdown(java.base@17.0.11/Shutdown.java:185)
	- locked <0x000000070fd578f0> (a java.lang.Class for java.lang.Shutdown)

"RMI TCP Accept-0" #25 daemon prio=5 os_prio=0 cpu=31.25ms elapsed=5.95s tid=0x000001fd146d8670 nid=0x1114 runnable  [0x0000009f842fe000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.Net.accept(java.base@17.0.11/Native Method)
	at sun.nio.ch.NioSocketImpl.accept(java.base@17.0.11/NioSocketImpl.java:760)
	at java.net.ServerSocket.implAccept(java.base@17.0.11/ServerSocket.java:675)
	at java.net.ServerSocket.platformImplAccept(java.base@17.0.11/ServerSocket.java:641)
	at java.net.ServerSocket.implAccept(java.base@17.0.11/ServerSocket.java:617)
	at java.net.ServerSocket.implAccept(java.base@17.0.11/ServerSocket.java:574)
	at java.net.ServerSocket.accept(java.base@17.0.11/ServerSocket.java:532)
	at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(jdk.management.agent@17.0.11/LocalRMIServerSocketFactory.java:52)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(java.rmi@17.0.11/TCPTransport.java:413)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(java.rmi@17.0.11/TCPTransport.java:377)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)

"JFR Shutdown Hook" #17 prio=5 os_prio=0 cpu=46.88ms elapsed=0.10s tid=0x000001fd146d8b80 nid=0x5850 waiting on condition  [0x0000009f833ff000]
   java.lang.Thread.State: RUNNABLE
	at jdk.jfr.internal.JVM.emitEvent(jdk.jfr@17.0.11/Native Method)
	at jdk.jfr.internal.RequestEngine$RequestHook.execute(jdk.jfr@17.0.11/RequestEngine.java:70)
	at jdk.jfr.internal.RequestEngine.doChunk(jdk.jfr@17.0.11/RequestEngine.java:186)
	at jdk.jfr.internal.RequestEngine.doChunkEnd(jdk.jfr@17.0.11/RequestEngine.java:175)
	at jdk.jfr.internal.PlatformRecorder.stop(jdk.jfr@17.0.11/PlatformRecorder.java:324)
	- locked <0x000000070fc15b48> (a jdk.jfr.internal.PlatformRecorder)
	at jdk.jfr.internal.PlatformRecording.stop(jdk.jfr@17.0.11/PlatformRecording.java:169)
	- locked <0x000000070fc15b48> (a jdk.jfr.internal.PlatformRecorder)
	at jdk.jfr.internal.ShutdownHook.dump(jdk.jfr@17.0.11/ShutdownHook.java:71)
	at jdk.jfr.internal.ShutdownHook.run(jdk.jfr@17.0.11/ShutdownHook.java:57)
	at java.lang.Thread.run(java.base@17.0.11/Thread.java:840)

"VM Thread" os_prio=2 cpu=15.62ms elapsed=7.07s tid=0x000001fccd83dfa0 nid=0x1120 runnable  

"GC Thread#0" os_prio=2 cpu=0.00ms elapsed=7.09s tid=0x000001fcaaad84e0 nid=0x5a6c runnable  

"GC Thread#1" os_prio=2 cpu=0.00ms elapsed=6.32s tid=0x000001fd14c11a70 nid=0x4bc4 runnable  

"GC Thread#2" os_prio=2 cpu=0.00ms elapsed=6.32s tid=0x000001fd15075f50 nid=0x5930 runnable  

"GC Thread#3" os_prio=2 cpu=0.00ms elapsed=6.32s tid=0x000001fd14cbecf0 nid=0x4c9c runnable  

"GC Thread#4" os_prio=2 cpu=0.00ms elapsed=6.32s tid=0x000001fd14cbf3b0 nid=0x376c runnable  

"GC Thread#5" os_prio=2 cpu=0.00ms elapsed=6.32s tid=0x000001fd14cbf670 nid=0x45a4 runnable  

"G1 Main Marker" os_prio=2 cpu=0.00ms elapsed=7.09s tid=0x000001fcaaae92f0 nid=0x5bac runnable  

"G1 Conc#0" os_prio=2 cpu=0.00ms elapsed=7.09s tid=0x000001fcaaaea4b0 nid=0x5a8c runnable  

"G1 Refine#0" os_prio=2 cpu=0.00ms elapsed=7.09s tid=0x000001fcaab1e070 nid=0x5b04 runnable  

"G1 Service" os_prio=2 cpu=0.00ms elapsed=7.09s tid=0x000001fcaab1eaa0 nid=0x53b0 runnable  

"VM Periodic Task Thread" os_prio=2 cpu=0.00ms elapsed=6.33s tid=0x000001fd14a720b0 nid=0x3db0 waiting on condition  

JNI global refs: 35, weak refs: 3

"
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.exe"
  baseAddress = 0x7FF7A2590000
  topAddress = 0x7FF7A259E000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\SYSTEM32\ntdll.dll"
  baseAddress = 0x7FFEC2990000
  topAddress = 0x7FFEC2BA7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\KERNEL32.DLL"
  baseAddress = 0x7FFEC15C0000
  topAddress = 0x7FFEC1684000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\KERNELBASE.dll"
  baseAddress = 0x7FFEBFFE0000
  topAddress = 0x7FFEC038D000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\ucrtbase.dll"
  baseAddress = 0x7FFEC03C0000
  topAddress = 0x7FFEC04D1000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\VCRUNTIME140.dll"
  baseAddress = 0x7FFEA08C0000
  topAddress = 0x7FFEA08DB000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jli.dll"
  baseAddress = 0x7FFEA19C0000
  topAddress = 0x7FFEA19D7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\USER32.dll"
  baseAddress = 0x7FFEC1400000
  topAddress = 0x7FFEC15AE000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955\COMCTL32.dll"
  baseAddress = 0x7FFE99FB0000
  topAddress = 0x7FFE9A243000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\win32u.dll"
  baseAddress = 0x7FFEC0390000
  topAddress = 0x7FFEC03B6000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\msvcrt.dll"
  baseAddress = 0x7FFEC2170000
  topAddress = 0x7FFEC2217000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\GDI32.dll"
  baseAddress = 0x7FFEC11B0000
  topAddress = 0x7FFEC11D9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\gdi32full.dll"
  baseAddress = 0x7FFEC04E0000
  topAddress = 0x7FFEC05F9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\msvcp_win.dll"
  baseAddress = 0x7FFEC0600000
  topAddress = 0x7FFEC069A000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Windows\System32\IMM32.DLL"
  baseAddress = 0x7FFEC0C40000
  topAddress = 0x7FFEC0C71000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\vcruntime140_1.dll"
  baseAddress = 0x7FFEBC1C0000
  topAddress = 0x7FFEBC1CC000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\msvcp140.dll"
  baseAddress = 0x7FFE7AD00000
  topAddress = 0x7FFE7AD8D000
}

jdk.NativeLibrary {
  startTime = 17:41:20.980
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\server\jvm.dll"
  baseAddress = 0x7FFE35E80000
  topAddress = 0x7FFE36AE6000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\ADVAPI32.dll"
  baseAddress = 0x7FFEC1340000
  topAddress = 0x7FFEC13F2000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\sechost.dll"
  baseAddress = 0x7FFEC1690000
  topAddress = 0x7FFEC1739000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\bcrypt.dll"
  baseAddress = 0x7FFEC06A0000
  topAddress = 0x7FFEC06C8000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\RPCRT4.dll"
  baseAddress = 0x7FFEC27B0000
  topAddress = 0x7FFEC28C4000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\POWRPROF.dll"
  baseAddress = 0x7FFEBF4F0000
  topAddress = 0x7FFEBF53D000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\WSOCK32.dll"
  baseAddress = 0x7FFEA7390000
  topAddress = 0x7FFEA7399000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\WINMM.dll"
  baseAddress = 0x7FFEBA330000
  topAddress = 0x7FFEBA364000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\WS2_32.dll"
  baseAddress = 0x7FFEC28D0000
  topAddress = 0x7FFEC2941000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\VERSION.dll"
  baseAddress = 0x7FFEB6E90000
  topAddress = 0x7FFEB6E9A000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\UMPDC.dll"
  baseAddress = 0x7FFEBF4C0000
  topAddress = 0x7FFEBF4D3000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\kernel.appcore.dll"
  baseAddress = 0x7FFEBEBC0000
  topAddress = 0x7FFEBEBD8000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jimage.dll"
  baseAddress = 0x7FFEBC610000
  topAddress = 0x7FFEBC61A000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\DBGHELP.DLL"
  baseAddress = 0x7FFEBD220000
  topAddress = 0x7FFEBD452000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\combase.dll"
  baseAddress = 0x7FFEC2270000
  topAddress = 0x7FFEC25F8000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\OLEAUT32.dll"
  baseAddress = 0x7FFEC10D0000
  topAddress = 0x7FFEC11A7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\SYSTEM32\dbgcore.DLL"
  baseAddress = 0x7FFEAE350000
  topAddress = 0x7FFEAE382000
}

jdk.NativeLibrary {
  startTime = 17:41:20.981
  name = "C:\Windows\System32\bcryptPrimitives.dll"
  baseAddress = 0x7FFEBFF60000
  topAddress = 0x7FFEBFFDB000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\instrument.dll"
  baseAddress = 0x7FFEBC550000
  topAddress = 0x7FFEBC55E000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\java.dll"
  baseAddress = 0x7FFEAD290000
  topAddress = 0x7FFEAD2B5000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\jsvml.dll"
  baseAddress = 0x7FFE93C20000
  topAddress = 0x7FFE93CF7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\System32\SHELL32.dll"
  baseAddress = 0x7FFEC1750000
  topAddress = 0x7FFEC1FAF000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\SYSTEM32\windows.storage.dll"
  baseAddress = 0x7FFEBD8F0000
  topAddress = 0x7FFEBE1EC000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\SYSTEM32\wintypes.dll"
  baseAddress = 0x7FFEBD7B0000
  topAddress = 0x7FFEBD8EF000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\System32\SHCORE.dll"
  baseAddress = 0x7FFEC2070000
  topAddress = 0x7FFEC2164000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\System32\shlwapi.dll"
  baseAddress = 0x7FFEC0C80000
  topAddress = 0x7FFEC0CDE000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\SYSTEM32\profapi.dll"
  baseAddress = 0x7FFEBFBF0000
  topAddress = 0x7FFEBFC11000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\zip.dll"
  baseAddress = 0x7FFEAD180000
  topAddress = 0x7FFEAD198000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\net.dll"
  baseAddress = 0x7FFEB9F60000
  topAddress = 0x7FFEB9F79000
}

jdk.NativeLibrary {
  startTime = 17:41:20.982
  name = "C:\Windows\SYSTEM32\WINHTTP.dll"
  baseAddress = 0x7FFEBEBE0000
  topAddress = 0x7FFEBED16000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\system32\mswsock.dll"
  baseAddress = 0x7FFEBF160000
  topAddress = 0x7FFEBF1C9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\nio.dll"
  baseAddress = 0x7FFEB7AF0000
  topAddress = 0x7FFEB7B06000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Program Files\JetBrains\IntelliJ IDEA 2024.1.4\bin\breakgen64.dll"
  baseAddress = 0x7FFEBC150000
  topAddress = 0x7FFEBC16A000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\extnet.dll"
  baseAddress = 0x7FFEA08E0000
  topAddress = 0x7FFEA08E9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\SYSTEM32\DNSAPI.dll"
  baseAddress = 0x7FFEBE470000
  topAddress = 0x7FFEBE568000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\SYSTEM32\IPHLPAPI.DLL"
  baseAddress = 0x7FFEBE440000
  topAddress = 0x7FFEBE46D000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\System32\NSI.dll"
  baseAddress = 0x7FFEC1740000
  topAddress = 0x7FFEC1749000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\System32\rasadhlp.dll"
  baseAddress = 0x7FFEB87F0000
  topAddress = 0x7FFEB87FA000
}

jdk.NativeLibrary {
  startTime = 17:41:20.983
  name = "C:\Windows\System32\fwpuclnt.dll"
  baseAddress = 0x7FFEB84F0000
  topAddress = 0x7FFEB8573000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\management.dll"
  baseAddress = 0x7FFEA5F80000
  topAddress = 0x7FFEA5F89000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Program Files\Microsoft\jdk-17.0.11.9-hotspot\bin\management_ext.dll"
  baseAddress = 0x7FFEA5F70000
  topAddress = 0x7FFEA5F7B000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\System32\PSAPI.DLL"
  baseAddress = 0x7FFEC15B0000
  topAddress = 0x7FFEC15B8000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\SYSTEM32\CRYPTSP.dll"
  baseAddress = 0x7FFEBF550000
  topAddress = 0x7FFEBF56B000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\system32\rsaenh.dll"
  baseAddress = 0x7FFEBEB20000
  topAddress = 0x7FFEBEB55000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\SYSTEM32\USERENV.dll"
  baseAddress = 0x7FFEBF200000
  topAddress = 0x7FFEBF228000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\SYSTEM32\CRYPTBASE.dll"
  baseAddress = 0x7FFEBF4E0000
  topAddress = 0x7FFEBF4EC000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\SYSTEM32\dhcpcsvc6.DLL"
  baseAddress = 0x7FFEBAFD0000
  topAddress = 0x7FFEBAFE9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.984
  name = "C:\Windows\SYSTEM32\dhcpcsvc.DLL"
  baseAddress = 0x7FFEBAF10000
  topAddress = 0x7FFEBAF2F000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\system32\napinsp.dll"
  baseAddress = 0x7FFEBC4E0000
  topAddress = 0x7FFEBC4F7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\system32\pnrpnsp.dll"
  baseAddress = 0x7FFEBC4C0000
  topAddress = 0x7FFEBC4DB000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\System32\winrnr.dll"
  baseAddress = 0x7FFEBC500000
  topAddress = 0x7FFEBC511000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\system32\wshbth.dll"
  baseAddress = 0x7FFEA0A90000
  topAddress = 0x7FFEA0AA5000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\system32\nlansp_c.dll"
  baseAddress = 0x7FFE51ED0000
  topAddress = 0x7FFE51EF7000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\system32\pdh.dll"
  baseAddress = 0x7FFE9F0A0000
  topAddress = 0x7FFE9F0F9000
}

jdk.NativeLibrary {
  startTime = 17:41:20.985
  name = "C:\Windows\System32\perfproc.dll"
  baseAddress = 0x7FFEACF40000
  topAddress = 0x7FFEACF51000
}

jdk.NativeLibrary {
  startTime = 17:41:20.986
  name = "C:\Windows\System32\perfos.dll"
  baseAddress = 0x7FFEBC490000
  topAddress = 0x7FFEBC4A0000
}

jdk.NativeLibrary {
  startTime = 17:41:20.986
  name = "C:\Windows\SYSTEM32\pfclient.dll"
  baseAddress = 0x7FFEBCB10000
  topAddress = 0x7FFEBCB20000
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jsobject"
    version = "17.0.11"
    location = "jrt:/jdk.jsobject"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.crypto.mscapi"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.mscapi"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.httpserver"
    version = "17.0.11"
    location = "jrt:/jdk.httpserver"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.xml.dom"
    version = "17.0.11"
    location = "jrt:/jdk.xml.dom"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.xml.dom"
    version = "17.0.11"
    location = "jrt:/jdk.xml.dom"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.scripting"
    version = "17.0.11"
    location = "jrt:/java.scripting"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.transaction.xa"
    version = "17.0.11"
    location = "jrt:/java.transaction.xa"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.dynalink"
    version = "17.0.11"
    location = "jrt:/jdk.dynalink"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.dynalink"
    version = "17.0.11"
    location = "jrt:/jdk.dynalink"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.net.http"
    version = "17.0.11"
    location = "jrt:/java.net.http"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.transaction.xa"
    version = "17.0.11"
    location = "jrt:/java.transaction.xa"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.localedata"
    version = "17.0.11"
    location = "jrt:/jdk.localedata"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.transaction.xa"
    version = "17.0.11"
    location = "jrt:/java.transaction.xa"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.smartcardio"
    version = "17.0.11"
    location = "jrt:/java.smartcardio"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.charsets"
    version = "17.0.11"
    location = "jrt:/jdk.charsets"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.accessibility"
    version = "17.0.11"
    location = "jrt:/jdk.accessibility"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.accessibility"
    version = "17.0.11"
    location = "jrt:/jdk.accessibility"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.accessibility"
    version = "17.0.11"
    location = "jrt:/jdk.accessibility"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.accessibility"
    version = "17.0.11"
    location = "jrt:/jdk.accessibility"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.zipfs"
    version = "17.0.11"
    location = "jrt:/jdk.zipfs"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.random"
    version = "17.0.11"
    location = "jrt:/jdk.random"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdwp.agent"
    version = "17.0.11"
    location = "jrt:/jdk.jdwp.agent"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.opt"
    version = "17.0.11"
    location = "jrt:/jdk.internal.opt"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.internal.ed"
    version = "17.0.11"
    location = "jrt:/jdk.internal.ed"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.internal.opt"
    version = "17.0.11"
    location = "jrt:/jdk.internal.opt"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.ed"
    version = "17.0.11"
    location = "jrt:/jdk.internal.ed"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.internal.le"
    version = "17.0.11"
    location = "jrt:/jdk.internal.le"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdi"
    version = "17.0.11"
    location = "jrt:/jdk.jdi"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdi"
    version = "17.0.11"
    location = "jrt:/jdk.jdi"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.jdwp.agent"
    version = "17.0.11"
    location = "jrt:/jdk.jdwp.agent"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jdi"
    version = "17.0.11"
    location = "jrt:/jdk.jdi"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.prefs"
    version = "17.0.11"
    location = "jrt:/java.prefs"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.le"
    version = "17.0.11"
    location = "jrt:/jdk.internal.le"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.opt"
    version = "17.0.11"
    location = "jrt:/jdk.internal.opt"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.jdi"
    version = "17.0.11"
    location = "jrt:/jdk.jdi"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "jdk.internal.ed"
    version = "17.0.11"
    location = "jrt:/jdk.internal.ed"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.sctp"
    version = "17.0.11"
    location = "jrt:/jdk.sctp"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.unsupported"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
  requiredModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
  requiredModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
  requiredModule = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.net"
    version = "17.0.11"
    location = "jrt:/jdk.net"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.prefs"
    version = "17.0.11"
    location = "jrt:/java.prefs"
    classLoader = null
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.prefs"
    version = "17.0.11"
    location = "jrt:/java.prefs"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
  requiredModule = {
    name = "java.xml"
    version = "17.0.11"
    location = "jrt:/java.xml"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
  requiredModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
  requiredModule = {
    name = "java.prefs"
    version = "17.0.11"
    location = "jrt:/java.prefs"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
  requiredModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.instrument"
    version = "17.0.11"
    location = "jrt:/java.instrument"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.nio.mapmode"
    version = "17.0.11"
    location = "jrt:/jdk.nio.mapmode"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.naming.rmi"
    version = "17.0.11"
    location = "jrt:/jdk.naming.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.naming.rmi"
    version = "17.0.11"
    location = "jrt:/jdk.naming.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.naming.rmi"
    version = "17.0.11"
    location = "jrt:/jdk.naming.rmi"
    classLoader = null
  }
  requiredModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
  requiredModule = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
  requiredModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
  requiredModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
  requiredModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
  requiredModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
  requiredModule = {
    name = N/A
    version = N/A
    location = N/A
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
  requiredModule = {
    name = N/A
    version = N/A
    location = N/A
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
  requiredModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.proxy1"
    version = N/A
    location = N/A
    classLoader = null
  }
  requiredModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleRequire {
  startTime = 17:41:20.986
  source = {
    name = "jdk.proxy1"
    version = N/A
    location = N/A
    classLoader = null
  }
  requiredModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sql/rowset/serial"
    module = {
      name = "java.sql.rowset"
      version = "17.0.11"
      location = "jrt:/java.sql.rowset"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/dynalink/linker"
    module = {
      name = "jdk.dynalink"
      version = "17.0.11"
      location = "jrt:/jdk.dynalink"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/stylesheets"
    module = {
      name = "jdk.xml.dom"
      version = "17.0.11"
      location = "jrt:/jdk.xml.dom"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/dynalink/support"
    module = {
      name = "jdk.dynalink"
      version = "17.0.11"
      location = "jrt:/jdk.dynalink"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/tools"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto/dsig/dom"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/jgss"
    module = {
      name = "jdk.security.jgss"
      version = "17.0.11"
      location = "jrt:/jdk.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/url/dns"
    module = {
      name = "jdk.naming.dns"
      version = "17.0.11"
      location = "jrt:/jdk.naming.dns"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jgss"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/net/http"
    module = {
      name = "java.net.http"
      version = "17.0.11"
      location = "jrt:/java.net.http"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/dynalink"
    module = {
      name = "jdk.dynalink"
      version = "17.0.11"
      location = "jrt:/jdk.dynalink"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/lang/model/type"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jgss/krb5"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/html"
    module = {
      name = "jdk.xml.dom"
      version = "17.0.11"
      location = "jrt:/jdk.xml.dom"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/transaction/xa"
    module = {
      name = "java.transaction.xa"
      version = "17.0.11"
      location = "jrt:/java.transaction.xa"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/auth/login"
    module = {
      name = "jdk.security.auth"
      version = "17.0.11"
      location = "jrt:/jdk.security.auth"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jgss/krb5/internal"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sql/rowset"
    module = {
      name = "java.sql.rowset"
      version = "17.0.11"
      location = "jrt:/java.sql.rowset"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/auth/callback"
    module = {
      name = "jdk.security.auth"
      version = "17.0.11"
      location = "jrt:/jdk.security.auth"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/net/httpserver"
    module = {
      name = "jdk.httpserver"
      version = "17.0.11"
      location = "jrt:/jdk.httpserver"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/net/httpserver/spi"
    module = {
      name = "jdk.httpserver"
      version = "17.0.11"
      location = "jrt:/jdk.httpserver"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/www/protocol/http/spnego"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/krb5/internal"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto/dsig"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/auth"
    module = {
      name = "jdk.security.auth"
      version = "17.0.11"
      location = "jrt:/jdk.security.auth"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth/kerberos"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/css"
    module = {
      name = "jdk.xml.dom"
      version = "17.0.11"
      location = "jrt:/jdk.xml.dom"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/dynalink/beans"
    module = {
      name = "jdk.dynalink"
      version = "17.0.11"
      location = "jrt:/jdk.dynalink"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/ietf/jgss"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/lang/model/util"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto/dsig/spec"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto/dsig/keyinfo"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/lang/model"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/java/accessibility/util"
    module = {
      name = "jdk.accessibility"
      version = "17.0.11"
      location = "jrt:/jdk.accessibility"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/dynalink/linker/support"
    module = {
      name = "jdk.dynalink"
      version = "17.0.11"
      location = "jrt:/jdk.dynalink"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto/dom"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/krb5/internal/ktab"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/annotation/processing"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/script"
    module = {
      name = "java.scripting"
      version = "17.0.11"
      location = "jrt:/java.scripting"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "netscape/javascript"
    module = {
      name = "jdk.jsobject"
      version = "17.0.11"
      location = "jrt:/jdk.jsobject"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/auth/module"
    module = {
      name = "jdk.security.auth"
      version = "17.0.11"
      location = "jrt:/jdk.security.auth"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/smartcardio"
    module = {
      name = "java.smartcardio"
      version = "17.0.11"
      location = "jrt:/java.smartcardio"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sql"
    module = {
      name = "java.sql"
      version = "17.0.11"
      location = "jrt:/java.sql"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/sql"
    module = {
      name = "java.sql"
      version = "17.0.11"
      location = "jrt:/java.sql"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/krb5"
    module = {
      name = "java.security.jgss"
      version = "17.0.11"
      location = "jrt:/java.security.jgss"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/crypto"
    module = {
      name = "java.xml.crypto"
      version = "17.0.11"
      location = "jrt:/java.xml.crypto"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sql/rowset/spi"
    module = {
      name = "java.sql.rowset"
      version = "17.0.11"
      location = "jrt:/java.sql.rowset"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/xpath"
    module = {
      name = "jdk.xml.dom"
      version = "17.0.11"
      location = "jrt:/jdk.xml.dom"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/lang/model/element"
    module = {
      name = "java.compiler"
      version = "17.0.11"
      location = "jrt:/java.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/util"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/slf4j/spi"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/reader/impl"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/jconsole"
    module = {
      name = "jdk.jconsole"
      version = "17.0.11"
      location = "jrt:/jdk.jconsole"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/reader/impl/history"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jdi"
    module = {
      name = "jdk.jdi"
      version = "17.0.11"
      location = "jrt:/jdk.jdi"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/swing/interop"
    module = {
      name = "jdk.unsupported.desktop"
      version = "17.0.11"
      location = "jrt:/jdk.unsupported.desktop"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/keymap"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jshell/spi"
    module = {
      name = "jdk.jshell"
      version = "17.0.11"
      location = "jrt:/jdk.jshell"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/encoder"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic/spi"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/monitor/event"
    module = {
      name = "jdk.internal.jvmstat"
      version = "17.0.11"
      location = "jrt:/jdk.internal.jvmstat"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/security/jarsigner"
    module = {
      name = "jdk.jartool"
      version = "17.0.11"
      location = "jrt:/jdk.jartool"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/boolex"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/source/util"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/reader"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/editor/spi"
    module = {
      name = "jdk.internal.ed"
      version = "17.0.11"
      location = "jrt:/jdk.internal.ed"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/editor/spi"
    module = {
      name = "jdk.internal.ed"
      version = "17.0.11"
      location = "jrt:/jdk.internal.ed"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.editpad"
    version = "17.0.11"
    location = "jrt:/jdk.editpad"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jshell"
    module = {
      name = "jdk.jshell"
      version = "17.0.11"
      location = "jrt:/jdk.jshell"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/reader/impl/completer"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jdi/connect/spi"
    module = {
      name = "jdk.jdi"
      version = "17.0.11"
      location = "jrt:/jdk.jdi"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/resources"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/terminal/spi"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/slf4j/helpers"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/intellij/rt/execution/application"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/classfile"
    module = {
      name = "jdk.jdeps"
      version = "17.0.11"
      location = "jrt:/jdk.jdeps"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/parser"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/slf4j/event"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/source/doctree"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/comp"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/comp"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jarsigner"
    module = {
      name = "jdk.jartool"
      version = "17.0.11"
      location = "jrt:/jdk.jartool"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/jvm"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/monitor/remote"
    module = {
      name = "jdk.jstatd"
      version = "17.0.11"
      location = "jrt:/jdk.jstatd"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic/util"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/terminal/impl"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/util"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/util"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/util"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/shellsupport/doc"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/random"
    module = {
      name = "jdk.random"
      version = "17.0.11"
      location = "jrt:/jdk.random"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/model"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "rujche/sample/jmc/aa/java/application/aa/threads"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic/layout"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/platform"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/platform"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic/pattern"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jshell/execution"
    module = {
      name = "jdk.jshell"
      version = "17.0.11"
      location = "jrt:/jdk.jshell"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/joran/spi"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/file"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jdeps"
    version = "17.0.11"
    location = "jrt:/jdk.jdeps"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/file"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/status"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/terminal"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jdi/connect"
    module = {
      name = "jdk.jdi"
      version = "17.0.11"
      location = "jrt:/jdk.jdi"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/attach"
    module = {
      name = "jdk.attach"
      version = "17.0.11"
      location = "jrt:/jdk.attach"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/code"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/code"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/monitor"
    module = {
      name = "jdk.internal.jvmstat"
      version = "17.0.11"
      location = "jrt:/jdk.internal.jvmstat"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/monitor"
    module = {
      name = "jdk.internal.jvmstat"
      version = "17.0.11"
      location = "jrt:/jdk.internal.jvmstat"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/monitor"
    module = {
      name = "jdk.internal.jvmstat"
      version = "17.0.11"
      location = "jrt:/jdk.internal.jvmstat"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/pattern"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/jvmstat/perfdata/monitor"
    module = {
      name = "jdk.internal.jvmstat"
      version = "17.0.11"
      location = "jrt:/jdk.internal.jvmstat"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jstatd"
    version = "17.0.11"
    location = "jrt:/jdk.jstatd"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/classic/joran"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/tree"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/tree"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jdi/event"
    module = {
      name = "jdk.jdi"
      version = "17.0.11"
      location = "jrt:/jdk.jdi"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jdi/request"
    module = {
      name = "jdk.jdi"
      version = "17.0.11"
      location = "jrt:/jdk.jdi"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jshell/tool"
    module = {
      name = "jdk.jshell"
      version = "17.0.11"
      location = "jrt:/jdk.jshell"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/spi"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/editor/external"
    module = {
      name = "jdk.internal.ed"
      version = "17.0.11"
      location = "jrt:/jdk.internal.ed"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/slf4j"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/main"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/main"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/javadoc/doclet"
    module = {
      name = "jdk.javadoc"
      version = "17.0.11"
      location = "jrt:/jdk.javadoc"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/doclint"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/attach/spi"
    module = {
      name = "jdk.attach"
      version = "17.0.11"
      location = "jrt:/jdk.attach"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/helpers"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/joptsimple"
    module = {
      name = "jdk.internal.opt"
      version = "17.0.11"
      location = "jrt:/jdk.internal.opt"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/joptsimple"
    module = {
      name = "jdk.internal.opt"
      version = "17.0.11"
      location = "jrt:/jdk.internal.opt"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/api"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/tools/javac/api"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.javadoc"
    version = "17.0.11"
    location = "jrt:/jdk.javadoc"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "ch/qos/logback/core/filter"
    module = {
      name = N/A
      version = N/A
      location = N/A
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/jline/utils"
    module = {
      name = "jdk.internal.le"
      version = "17.0.11"
      location = "jrt:/jdk.internal.le"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/source/tree"
    module = {
      name = "jdk.compiler"
      version = "17.0.11"
      location = "jrt:/jdk.compiler"
      classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming/ldap"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/internal/management"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/stream"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/im/spi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/file/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/ntlm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/events"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/loading"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm/tree"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm/tree"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/text/html/parser"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth/login"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/management"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/charset"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xml/internal/dtm"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/util/jar"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/rsa"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.mscapi"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.mscapi"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/rsa"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jca"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jca"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jca"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/jca"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.smartcardio"
    version = "17.0.11"
    location = "jrt:/java.smartcardio"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/xml/sax/helpers"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/spi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/rmi/registry"
    module = {
      name = "jdk.naming.rmi"
      version = "17.0.11"
      location = "jrt:/jdk.naming.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/monitor"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/time/format"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/proxy1"
    module = {
      name = "jdk.proxy1"
      version = N/A
      location = N/A
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/table"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.sctp"
    version = "17.0.11"
    location = "jrt:/jdk.sctp"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.net.http"
    version = "17.0.11"
    location = "jrt:/java.net.http"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/remote/rmi"
    module = {
      name = "java.management.rmi"
      version = "17.0.11"
      location = "jrt:/java.management.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/stream"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/print/attribute/standard"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/nio"
    module = {
      name = "jdk.net"
      version = "17.0.11"
      location = "jrt:/jdk.net"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/cs"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.charsets"
    version = "17.0.11"
    location = "jrt:/jdk.charsets"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/protocol/rmi"
    module = {
      name = "java.management.rmi"
      version = "17.0.11"
      location = "jrt:/java.management.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/beans"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/time/chrono"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/ranges"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sound/midi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming/directory"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/event"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/jmod"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/jmod"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/x509"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/x509"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/x509"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.charsets"
    version = "17.0.11"
    location = "jrt:/jdk.charsets"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.net"
    version = "17.0.11"
    location = "jrt:/jdk.net"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/access"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/text"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider/certpath"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider/certpath"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/parsers"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/bootstrap"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/misc"
    module = {
      name = "jdk.unsupported"
      version = "17.0.11"
      location = "jrt:/jdk.unsupported"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/net"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/ch"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/ch"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.net"
    version = "17.0.11"
    location = "jrt:/jdk.net"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/ch"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.sctp"
    version = "17.0.11"
    location = "jrt:/jdk.sctp"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/ch"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xpath/internal/res"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/url/rmi"
    module = {
      name = "jdk.naming.rmi"
      version = "17.0.11"
      location = "jrt:/jdk.naming.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/ext"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.net"
    version = "17.0.11"
    location = "jrt:/jdk.net"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/toolkit/url"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.rmi"
    version = "17.0.11"
    location = "jrt:/jdk.naming.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/toolkit/url"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/font"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/agent"
    module = {
      name = "jdk.management.agent"
      version = "17.0.11"
      location = "jrt:/jdk.management.agent"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management/counter"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.net.http"
    version = "17.0.11"
    location = "jrt:/java.net.http"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/invoke"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/nio/file"
    module = {
      name = "jdk.unsupported"
      version = "17.0.11"
      location = "jrt:/jdk.unsupported"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/util/xml"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/net/ssl"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/stream/events"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf/multi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf/nimbus"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/rmi/server"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/prefs"
    module = {
      name = "java.prefs"
      version = "17.0.11"
      location = "jrt:/java.prefs"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/security/cert"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/print"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/logging"
    module = {
      name = "java.logging"
      version = "17.0.11"
      location = "jrt:/java.logging"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/io"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf/synth"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/logger"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/action"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/action"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/action"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/text/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/jimage"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/random"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/javac"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.compiler"
    version = "17.0.11"
    location = "jrt:/java.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/javac"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/javac"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/regex"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/sasl"
    module = {
      name = "java.security.sasl"
      version = "17.0.11"
      location = "jrt:/java.security.sasl"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/rmi/dgc"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/resources"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.localedata"
    version = "17.0.11"
    location = "jrt:/jdk.localedata"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/transform/stream"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/xml/sax"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/undo"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/transport"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/transport"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/transport"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/namespace"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf/basic"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/accessibility"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/text/html"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management/spi"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.management.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management/spi"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/dns"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/dns"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/event"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/security"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xml/internal/utils"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sound/sampled"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/transform/dom"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util/math"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/vm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/vm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/ref"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/internal/interfaces"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/internal/spec"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.mscapi"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.mscapi"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/internal/spec"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/metadata"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/vm/annotation"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/vm/annotation"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/vm/annotation"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.instrument"
    version = "17.0.11"
    location = "jrt:/java.instrument"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xpath/internal"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sound/midi/spi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/time"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/rmi"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/validator"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jndi/toolkit/ctx"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.naming.dns"
    version = "17.0.11"
    location = "jrt:/jdk.naming.dns"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/channels/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util/math/intpoly"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/crypto/spec"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect"
    module = {
      name = "jdk.unsupported"
      version = "17.0.11"
      location = "jrt:/jdk.unsupported"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/modelmbean"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/www/protocol/http"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jpackage"
    version = "17.0.11"
    location = "jrt:/jdk.jpackage"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.instrument"
    version = "17.0.11"
    location = "jrt:/java.instrument"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/module"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/ls"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/nio/sctp"
    module = {
      name = "jdk.sctp"
      version = "17.0.11"
      location = "jrt:/jdk.sctp"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/im"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/print/attribute"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/rmi/ssl"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/annotation"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/dnd/peer"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/file"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/text/rtf"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/consumer"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/geom"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/registry"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/sound/sampled/spi"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/util/xml/impl"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/invoke/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.mscapi"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.mscapi"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.sasl"
    version = "17.0.11"
    location = "jrt:/java.security.sasl"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.smartcardio"
    version = "17.0.11"
    location = "jrt:/java.smartcardio"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/internal/handlers"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/border"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/text"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/security/sasl/util"
    module = {
      name = "java.security.sasl"
      version = "17.0.11"
      location = "jrt:/java.security.sasl"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.jgss"
    version = "17.0.11"
    location = "jrt:/jdk.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/filechooser"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/dnd"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/event"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/file/attribute"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/color"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/instrument"
    module = {
      name = "java.instrument"
      version = "17.0.11"
      location = "jrt:/java.instrument"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/constant"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/remote"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/security/interfaces"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/transform"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming/spi"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/locale/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/locale/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/locale/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.localedata"
    version = "17.0.11"
    location = "jrt:/jdk.localedata"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/proxy/jdk/proxy1"
    module = {
      name = "jdk.proxy1"
      version = N/A
      location = N/A
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm/util"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/datatransfer"
    module = {
      name = "java.datatransfer"
      version = "17.0.11"
      location = "jrt:/java.datatransfer"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/print/event"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/net"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/rmi/registry"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/crypto/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth/callback"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/www"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/net/www"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.net.http"
    version = "17.0.11"
    location = "jrt:/java.net.http"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/perf"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/perf"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/perf"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.internal.jvmstat"
    version = "17.0.11"
    location = "jrt:/jdk.internal.jvmstat"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/runtime"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xpath/internal/compiler"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming/event"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/datatransfer"
    module = {
      name = "java.datatransfer"
      version = "17.0.11"
      location = "jrt:/java.datatransfer"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/util/random"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.random"
    version = "17.0.11"
    location = "jrt:/jdk.random"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/logging"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/logging"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.prefs"
    version = "17.0.11"
    location = "jrt:/java.prefs"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/logging"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/nio/mapmode"
    module = {
      name = "jdk.nio.mapmode"
      version = "17.0.11"
      location = "jrt:/jdk.nio.mapmode"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/nio/fs"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.net"
    version = "17.0.11"
    location = "jrt:/jdk.net"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/colorchooser"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/management/jfr"
    module = {
      name = "jdk.management.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.management.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/xml/sax/helpers"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/transform/sax"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/image"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/image/renderable"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management/counter/perf"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/jimage/decompressor"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/security/spec"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/zip"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/charset/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.dynalink"
    version = "17.0.11"
    location = "jrt:/jdk.dynalink"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.sql"
    version = "17.0.11"
    location = "jrt:/java.sql"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/internal/rmi"
    module = {
      name = "java.management.rmi"
      version = "17.0.11"
      location = "jrt:/java.management.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/transform/stax"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/loader"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.instrument"
    version = "17.0.11"
    location = "jrt:/java.instrument"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/loader"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/loader"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/swing"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/pkcs"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/pkcs"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/reflect"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/server"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/server"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/rmi/server"
    module = {
      name = "java.rmi"
      version = "17.0.11"
      location = "jrt:/java.rmi"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/applet"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/desktop"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/security"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/security"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/platform"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/platform"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/concurrent"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.security.auth"
    version = "17.0.11"
    location = "jrt:/jdk.security.auth"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.ec"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.ec"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/provider"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/annotation"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/beans/beancontext"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/relation"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/time/temporal"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/plugins/bmp"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/generics/reflectiveObjects"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/lang/instrument"
    module = {
      name = "java.instrument"
      version = "17.0.11"
      location = "jrt:/java.instrument"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/management"
    module = {
      name = "jdk.management"
      version = "17.0.11"
      location = "jrt:/jdk.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/stream/util"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xpath/internal/functions"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/crypto"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/ref"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/naming/ldap/spi"
    module = {
      name = "java.naming"
      version = "17.0.11"
      location = "jrt:/java.naming"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/plugins/jpeg"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/concurrent/locks"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio/plugins/tiff"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.datatransfer"
    version = "17.0.11"
    location = "jrt:/java.datatransfer"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/reflect/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.sql.rowset"
    version = "17.0.11"
    location = "jrt:/java.sql.rowset"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm/commons"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/auth/x500"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.logging"
    version = "17.0.11"
    location = "jrt:/java.logging"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management"
    version = "17.0.11"
    location = "jrt:/java.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.compiler"
    version = "17.0.11"
    location = "jrt:/jdk.compiler"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jshell"
    version = "17.0.11"
    location = "jrt:/jdk.jshell"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.net.http"
    version = "17.0.11"
    location = "jrt:/java.net.http"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.crypto.cryptoki"
    version = "17.0.11"
    location = "jrt:/jdk.crypto.cryptoki"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.desktop"
    version = "17.0.11"
    location = "jrt:/java.desktop"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.attach"
    version = "17.0.11"
    location = "jrt:/jdk.attach"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.naming"
    version = "17.0.11"
    location = "jrt:/java.naming"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.nio.mapmode"
    version = "17.0.11"
    location = "jrt:/jdk.nio.mapmode"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.rmi"
    version = "17.0.11"
    location = "jrt:/java.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.charsets"
    version = "17.0.11"
    location = "jrt:/jdk.charsets"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/misc"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.security.jgss"
    version = "17.0.11"
    location = "jrt:/java.security.jgss"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/awt/print"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/util"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/net/spi"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/plaf/metal"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/timestamp"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/function"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/datatype"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/awt/dnd"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/nio/channels"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/traversal"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/java/swing/plaf/windows"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/openmbean"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/crypto/interfaces"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/xml/sax"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/catalog"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/events"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/events"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.proxy1"
    version = N/A
    location = N/A
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/net"
    module = {
      name = "jdk.net"
      version = "17.0.11"
      location = "jrt:/jdk.net"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/time/zone"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/security/tools"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/event"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/xpath"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/xml/sax/ext"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/internal"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.proxy1"
    version = N/A
    location = N/A
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/management/timer"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/jfr/internal/instrument"
    module = {
      name = "jdk.jfr"
      version = "17.0.11"
      location = "jrt:/jdk.jfr"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.base"
    version = "17.0.11"
    location = "jrt:/java.base"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/imageio"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/xml/validation"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "org/w3c/dom/views"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/security/cert"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/math"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/concurrent/atomic"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/jar"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/internal"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/jmx/remote/internal"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.management.rmi"
    version = "17.0.11"
    location = "jrt:/java.management.rmi"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/util/cldr"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management.agent"
    version = "17.0.11"
    location = "jrt:/jdk.management.agent"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jconsole"
    version = "17.0.11"
    location = "jrt:/jdk.jconsole"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/management"
    module = {
      name = "java.management"
      version = "17.0.11"
      location = "jrt:/java.management"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.management"
    version = "17.0.11"
    location = "jrt:/jdk.management"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "java/util/stream"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jfr"
    version = "17.0.11"
    location = "jrt:/jdk.jfr"
    classLoader = null
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jlink"
    version = "17.0.11"
    location = "jrt:/jdk.jlink"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "jdk/internal/org/objectweb/asm"
    module = {
      name = "java.base"
      version = "17.0.11"
      location = "jrt:/java.base"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.jartool"
    version = "17.0.11"
    location = "jrt:/jdk.jartool"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "com/sun/org/apache/xpath/internal/objects"
    module = {
      name = "java.xml"
      version = "17.0.11"
      location = "jrt:/java.xml"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "java.xml.crypto"
    version = "17.0.11"
    location = "jrt:/java.xml.crypto"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/awt"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.unsupported.desktop"
    version = "17.0.11"
    location = "jrt:/jdk.unsupported.desktop"
    classLoader = jdk.internal.loader.ClassLoaders$AppClassLoader (id = 2)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "sun/awt"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = {
    name = "jdk.accessibility"
    version = "17.0.11"
    location = "jrt:/jdk.accessibility"
    classLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader (id = 3)
  }
}

jdk.ModuleExport {
  startTime = 17:41:20.986
  exportedPackage = {
    name = "javax/swing/tree"
    module = {
      name = "java.desktop"
      version = "17.0.11"
      location = "jrt:/java.desktop"
      classLoader = null
    }
    exported = true
  }
  targetModule = N/A
}

jdk.CodeCacheStatistics {
  startTime = 17:41:20.986
  codeBlobType = "CodeHeap 'non-profiled nmethods'"
  startAddress = 0x1FCBA060000
  reservedTopAddress = 0x1FCC1590000
  entryCount = 639
  methodCount = 639
  adaptorCount = 0
  unallocatedCapacity = 116.4 MB
  fullCount = 0
}

jdk.CodeCacheStatistics {
  startTime = 17:41:20.986
  codeBlobType = "CodeHeap 'profiled nmethods'"
  startAddress = 0x1FCB2590000
  reservedTopAddress = 0x1FCB9AC0000
  entryCount = 1389
  methodCount = 1389
  adaptorCount = 0
  unallocatedCapacity = 114.1 MB
  fullCount = 0
}

jdk.CodeCacheStatistics {
  startTime = 17:41:20.986
  codeBlobType = "CodeHeap 'non-nmethods'"
  startAddress = 0x1FCB9AC0000
  reservedTopAddress = 0x1FCBA060000
  entryCount = 507
  methodCount = 0
  adaptorCount = 419
  unallocatedCapacity = 4.4 MB
  fullCount = 0
}

jdk.CodeSweeperStatistics {
  startTime = 17:41:20.986
  sweepCount = 1
  methodReclaimedCount = 0
  totalSweepTime = 1.84 ms
  peakFractionTime = 1.84 ms
  peakSweepTime = 1.84 ms
}

jdk.GCConfiguration {
  startTime = 17:41:20.986
  youngCollector = "G1New"
  oldCollector = "G1Old"
  parallelGCThreads = 8
  concurrentGCThreads = 2
  usesDynamicGCThreads = true
  isExplicitGCConcurrent = false
  isExplicitGCDisabled = false
  pauseTarget = N/A
  gcTimeRatio = 12
}

